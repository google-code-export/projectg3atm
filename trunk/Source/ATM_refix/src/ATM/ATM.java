
package ATM;

import com.sun.rowset.JdbcRowSetImpl;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;

/**
 *
 * @author User
 */
public class ATM extends javax.swing.JFrame {

    private String Account_Number;
    Timer time;
    String th;
    int ye, mo, da, ho, mi, se;
    Date todayD = new Date(System.currentTimeMillis());
    SimpleDateFormat the, years, months, days, hours, minutes, seconds;
    int delay = 1000;
    connecDB connec;

    /** Creates new form ATM */
    public ATM() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            initComponents();
            card = (CardLayout) pnFarther.getLayout();
            connec = new connecDB();
            connec.connecDB();
            sta = connec.sta;
            time();
            setCol(255, 255, 204);//setColor to system
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnFarther = new javax.swing.JPanel();
        tbnLogin = new javax.swing.JTabbedPane();
        pnCustomer_Log = new javax.swing.JPanel();
        pnLayout1 = new javax.swing.JPanel();
        pnLogo1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        pnLogin_container = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        lblTime5 = new javax.swing.JLabel();
        lblError_Cus_Login = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAccount = new javax.swing.JTextField();
        lbl1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPIN = new javax.swing.JPasswordField();
        lbl2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnK = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        pnAdmin_Log = new javax.swing.JPanel();
        pnLayout2 = new javax.swing.JPanel();
        pnLogo2 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        pnLogin_container1 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        lblTime7 = new javax.swing.JLabel();
        lblError_Admin_Login = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAccount_Admin = new javax.swing.JTextField();
        lbl3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPIN_Admin = new javax.swing.JPasswordField();
        lbl4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAdm_Login = new javax.swing.JButton();
        btnAdm_Clear = new javax.swing.JButton();
        btnAdm_Exit = new javax.swing.JButton();
        pnMenu_Cus = new javax.swing.JPanel();
        pnLogo3 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        pnMenu_Cus_Container = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnCus_Desposit = new javax.swing.JButton();
        btnCus_Withdraw = new javax.swing.JButton();
        btnCus_Transfer = new javax.swing.JButton();
        btnCus_Blance = new javax.swing.JButton();
        btnCus_ChangePin = new javax.swing.JButton();
        btnCus_Exit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblCus_Name = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCus_Age = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblCus_Phone = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblCus_Address = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaCus_Notes = new javax.swing.JTextArea();
        pnMenu_Adm = new javax.swing.JPanel();
        pnLogo4 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        pnMenu_Cus_Container1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnAdm_Create = new javax.swing.JButton();
        btnAdm_Management = new javax.swing.JButton();
        btnAdm_Bank = new javax.swing.JButton();
        btnAdm_ChangePin = new javax.swing.JButton();
        btnAd_Exit = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        lblTime1 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        lblAdm_Name = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblAdm_Age = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblAdm_Phone = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblAdm_Address = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaAdm_Notes = new javax.swing.JTextArea();
        pnDesposit = new javax.swing.JPanel();
        pnLogo10 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        pnMenu_Desposit = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblTime2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblAmount_Deposit_Display = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        lblDeposit_Session = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtDeposit_Amount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        lblError_Deposit = new javax.swing.JLabel();
        btnDesposit_Amount = new javax.swing.JButton();
        btnDesposit_Clear = new javax.swing.JButton();
        btnDesposit_Cancel = new javax.swing.JButton();
        pnK2 = new javax.swing.JPanel();
        btn20 = new javax.swing.JButton();
        btn21 = new javax.swing.JButton();
        btn22 = new javax.swing.JButton();
        btn23 = new javax.swing.JButton();
        btn24 = new javax.swing.JButton();
        btn25 = new javax.swing.JButton();
        btn26 = new javax.swing.JButton();
        btn27 = new javax.swing.JButton();
        btn28 = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        btn29 = new javax.swing.JButton();
        pnLayout_Desposit = new javax.swing.JPanel();
        pnWithdraw = new javax.swing.JPanel();
        pnLogo6 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        pnMenu_Withdraw = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        lblTime3 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lblAmount_Withdraw_Display = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        lblWithdraw_Session = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtWithdraw_Amount = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        lblError_Withdraw = new javax.swing.JLabel();
        btnWithdrawn_Amount = new javax.swing.JButton();
        btnClear_Withdraw = new javax.swing.JButton();
        btnCancel_Withdraw = new javax.swing.JButton();
        lblAlert = new javax.swing.JLabel();
        pnK3 = new javax.swing.JPanel();
        btn30 = new javax.swing.JButton();
        btn31 = new javax.swing.JButton();
        btn32 = new javax.swing.JButton();
        btn33 = new javax.swing.JButton();
        btn34 = new javax.swing.JButton();
        btn35 = new javax.swing.JButton();
        btn36 = new javax.swing.JButton();
        btn37 = new javax.swing.JButton();
        btn38 = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        btn39 = new javax.swing.JButton();
        pnTransfer = new javax.swing.JPanel();
        pnLogo7 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        pnMenu_Transfer = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        lblTime4 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lblAmount_Transfer_Display = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lblTransfer_Session = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtTransfer_Amount = new javax.swing.JTextField();
        lblError_Transfer_Amount = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        txtTransfer_ToAccountNumber = new javax.swing.JTextField();
        lblError_Transfer_To = new javax.swing.JLabel();
        lblError_Transfer = new javax.swing.JLabel();
        btnTransfer_ToAccount = new javax.swing.JButton();
        btnClear_Withdraw1 = new javax.swing.JButton();
        btnCancel_Withdraw1 = new javax.swing.JButton();
        pnK1 = new javax.swing.JPanel();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn13 = new javax.swing.JButton();
        btn14 = new javax.swing.JButton();
        btn15 = new javax.swing.JButton();
        btn16 = new javax.swing.JButton();
        btn17 = new javax.swing.JButton();
        btn18 = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        btn19 = new javax.swing.JButton();
        pnManagement = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabDeposit = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        pnDeList = new javax.swing.JPanel();
        cmbManagement = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        cmbFilter = new javax.swing.JComboBox();
        lblTime11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDesposit = new javax.swing.JTable();
        btnDesposit_Accept = new javax.swing.JButton();
        btnExit_Manager1 = new javax.swing.JButton();
        tabResetPIN = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        pnDeList3 = new javax.swing.JPanel();
        lblTime12 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblReSetPIN = new javax.swing.JTable();
        btnReset_PIN = new javax.swing.JButton();
        btnRefreshPIN = new javax.swing.JButton();
        btnExit_Manager4 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        tabListUser = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        pnDeList4 = new javax.swing.JPanel();
        lblTime13 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblListUserStatus = new javax.swing.JTable();
        btnDisable = new javax.swing.JButton();
        btnEnable = new javax.swing.JButton();
        btnExit_Manager5 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        pnCreate_Account = new javax.swing.JPanel();
        pnLogo8 = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        lblTime6 = new javax.swing.JLabel();
        lblErrorAccount = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtNewAccount = new javax.swing.JTextField();
        lblErrorNewAccount = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cmbNewLevel = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cmbNewType = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txtNewAmount = new javax.swing.JTextField();
        lblErrorNewAmount = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txtNewFullName = new javax.swing.JTextField();
        lblErrorNewGender = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        btnMale = new javax.swing.JButton();
        btnFemale = new javax.swing.JButton();
        lblErrorNewAge = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        txtNewAge = new javax.swing.JTextField();
        lblErrorNewFullName = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtNewPhone = new javax.swing.JTextField();
        lblErrorNewPhone = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txtAreaAddress = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        btnNewCreateAccount = new javax.swing.JButton();
        btnNewClear = new javax.swing.JButton();
        btnNewCancel = new javax.swing.JButton();
        pnChange_PinADMIN = new javax.swing.JPanel();
        pnLogo9 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        pn_Menu_ChangePIN_Admin = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        lblTime8 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        txtChangePin_Old_Admin = new javax.swing.JPasswordField();
        lblError_AChangePin_Old = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        txtChangePin_New_Admin = new javax.swing.JPasswordField();
        lblError_AChangePin_new = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        txtChangePin_NewR_Admin = new javax.swing.JPasswordField();
        lblError_AChangePin_newR = new javax.swing.JLabel();
        lblError_ChangePin = new javax.swing.JLabel();
        btnChangePIN_Admin = new javax.swing.JButton();
        btnClear_ChangePIN_Admin = new javax.swing.JButton();
        btnCancel_ChangePIN_Admin = new javax.swing.JButton();
        pnChange_PinUSER = new javax.swing.JPanel();
        pnLogo11 = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        pnMenu_ChangePIN = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        lblTime9 = new javax.swing.JLabel();
        lblAmount_Transfer_Display2 = new javax.swing.JLabel();
        lblTransfer_Session2 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        txtChange_PIN_UOld = new javax.swing.JPasswordField();
        lblError_changePin_UOLD = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        txtChange_PIN_UNew = new javax.swing.JPasswordField();
        lblError_changePin_UNew = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        txtChange_PIN_UNewR = new javax.swing.JPasswordField();
        lblError_changePin_UNewR = new javax.swing.JLabel();
        lblError_ChangePinU = new javax.swing.JLabel();
        btnChangePIN_User = new javax.swing.JButton();
        btnClear_User = new javax.swing.JButton();
        btnCancel_ChangePIN_User = new javax.swing.JButton();
        pnK4 = new javax.swing.JPanel();
        btn40 = new javax.swing.JButton();
        btn41 = new javax.swing.JButton();
        btn42 = new javax.swing.JButton();
        btn43 = new javax.swing.JButton();
        btn44 = new javax.swing.JButton();
        btn45 = new javax.swing.JButton();
        btn46 = new javax.swing.JButton();
        btn47 = new javax.swing.JButton();
        btn48 = new javax.swing.JButton();
        btnBack4 = new javax.swing.JButton();
        btn49 = new javax.swing.JButton();
        pnBlance_User = new javax.swing.JPanel();
        pn_Menu_Blance = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        lblTime10 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        lbl_Blance_Gender = new javax.swing.JLabel();
        lblBlance_Address1 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        lblBlance_Address = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        lblBlance_Blance = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        lblBlance_Transaction1 = new javax.swing.JLabel();
        lblBlance_Address2 = new javax.swing.JLabel();
        lblError_ChangePin1 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        cmb_History_User = new javax.swing.JComboBox();
        jLabel76 = new javax.swing.JLabel();
        cmbFilter_User = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBalance_History = new javax.swing.JTable();
        btnCancel_Blance_User = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ATM");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(170, 0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setResizable(false);

        pnFarther.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnFarther.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnFarther.setPreferredSize(new java.awt.Dimension(1000, 700));
        pnFarther.setLayout(new java.awt.CardLayout());

        tbnLogin.setForeground(new java.awt.Color(153, 153, 0));
        tbnLogin.setFont(new java.awt.Font("Tahoma", 1, 14));
        tbnLogin.setMaximumSize(new java.awt.Dimension(1000, 800));
        tbnLogin.setMinimumSize(new java.awt.Dimension(1000, 800));
        tbnLogin.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnCustomer_Log.setBackground(new java.awt.Color(204, 255, 204));
        pnCustomer_Log.setMaximumSize(new java.awt.Dimension(1000, 800));
        pnCustomer_Log.setMinimumSize(new java.awt.Dimension(1000, 800));
        pnCustomer_Log.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLayout1.setBackground(new java.awt.Color(255, 255, 255));
        pnLayout1.setMaximumSize(new java.awt.Dimension(800, 700));
        pnLayout1.setMinimumSize(new java.awt.Dimension(800, 700));
        pnLayout1.setPreferredSize(new java.awt.Dimension(810, 700));

        pnLogo1.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo1.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo1.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo1.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel19.setBackground(new java.awt.Color(153, 255, 153));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo_ATM.png"))); // NOI18N
        jLabel19.setMaximumSize(new java.awt.Dimension(810, 110));
        jLabel19.setMinimumSize(new java.awt.Dimension(810, 110));
        jLabel19.setPreferredSize(new java.awt.Dimension(810, 110));
        pnLogo1.add(jLabel19);

        pnLayout1.add(pnLogo1);

        pnLogin_container.setBackground(new java.awt.Color(204, 255, 153));
        pnLogin_container.setMaximumSize(new java.awt.Dimension(500, 500));
        pnLogin_container.setMinimumSize(new java.awt.Dimension(500, 500));
        pnLogin_container.setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel23.setBackground(new java.awt.Color(255, 255, 204));
        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel23.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime5.setBackground(new java.awt.Color(153, 255, 153));
        lblTime5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTime5.setForeground(new java.awt.Color(255, 0, 0));
        lblTime5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime5.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel23.add(lblTime5);

        pnLogin_container.add(jPanel23);

        lblError_Cus_Login.setForeground(new java.awt.Color(255, 0, 0));
        lblError_Cus_Login.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_Cus_Login.setPreferredSize(new java.awt.Dimension(400, 14));
        pnLogin_container.add(lblError_Cus_Login);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Account :");
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 14));
        pnLogin_container.add(jLabel1);

        txtAccount.setToolTipText("");
        txtAccount.setEnabled(false);
        txtAccount.setPreferredSize(new java.awt.Dimension(200, 20));
        txtAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAccountMouseClicked(evt);
            }
        });
        pnLogin_container.add(txtAccount);

        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl1.setPreferredSize(new java.awt.Dimension(100, 14));
        pnLogin_container.add(lbl1);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("PIN :");
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 14));
        pnLogin_container.add(jLabel3);

        txtPIN.setEnabled(false);
        txtPIN.setPreferredSize(new java.awt.Dimension(200, 20));
        txtPIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPINMouseClicked(evt);
            }
        });
        pnLogin_container.add(txtPIN);

        lbl2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl2.setPreferredSize(new java.awt.Dimension(100, 14));
        pnLogin_container.add(lbl2);

        jLabel2.setPreferredSize(new java.awt.Dimension(50, 14));
        pnLogin_container.add(jLabel2);

        pnK.setBackground(new java.awt.Color(255, 255, 255));
        pnK.setMaximumSize(new java.awt.Dimension(200, 290));
        pnK.setMinimumSize(new java.awt.Dimension(200, 290));
        pnK.setPreferredSize(new java.awt.Dimension(200, 290));

        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.GIF"))); // NOI18N
        btn1.setPreferredSize(new java.awt.Dimension(50, 50));
        btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn1MouseClicked(evt);
            }
        });
        pnK.add(btn1);

        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.GIF"))); // NOI18N
        btn2.setPreferredSize(new java.awt.Dimension(50, 50));
        btn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn2MouseClicked(evt);
            }
        });
        pnK.add(btn2);

        btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.GIF"))); // NOI18N
        btn3.setPreferredSize(new java.awt.Dimension(50, 50));
        btn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn3MouseClicked(evt);
            }
        });
        pnK.add(btn3);

        btn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.GIF"))); // NOI18N
        btn4.setPreferredSize(new java.awt.Dimension(50, 50));
        btn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn4MouseClicked(evt);
            }
        });
        pnK.add(btn4);

        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.GIF"))); // NOI18N
        btn5.setPreferredSize(new java.awt.Dimension(50, 50));
        btn5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn5MouseClicked(evt);
            }
        });
        pnK.add(btn5);

        btn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.GIF"))); // NOI18N
        btn6.setPreferredSize(new java.awt.Dimension(50, 50));
        btn6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn6MouseClicked(evt);
            }
        });
        pnK.add(btn6);

        btn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.GIF"))); // NOI18N
        btn7.setPreferredSize(new java.awt.Dimension(50, 50));
        btn7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn7MouseClicked(evt);
            }
        });
        pnK.add(btn7);

        btn8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.GIF"))); // NOI18N
        btn8.setPreferredSize(new java.awt.Dimension(50, 50));
        btn8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn8MouseClicked(evt);
            }
        });
        pnK.add(btn8);

        btn9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.GIF"))); // NOI18N
        btn9.setPreferredSize(new java.awt.Dimension(50, 50));
        btn9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn9MouseClicked(evt);
            }
        });
        pnK.add(btn9);

        btnBack.setForeground(new java.awt.Color(255, 0, 0));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBackspace.png"))); // NOI18N
        btnBack.setPreferredSize(new java.awt.Dimension(105, 50));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });
        pnK.add(btnBack);

        btn0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/0.png"))); // NOI18N
        btn0.setPreferredSize(new java.awt.Dimension(50, 50));
        btn0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn0MouseClicked(evt);
            }
        });
        pnK.add(btn0);

        btnLogin.setForeground(new java.awt.Color(255, 0, 0));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnLogin.png"))); // NOI18N
        btnLogin.setPreferredSize(new java.awt.Dimension(78, 50));
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });
        pnK.add(btnLogin);

        btnClear.setForeground(new java.awt.Color(255, 0, 0));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnClear.setPreferredSize(new java.awt.Dimension(78, 50));
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnK.add(btnClear);

        pnLogin_container.add(pnK);

        pnLayout1.add(pnLogin_container);

        pnCustomer_Log.add(pnLayout1);

        tbnLogin.addTab("Customer", new javax.swing.ImageIcon(getClass().getResource("/icon/User-Accounts-48.png")), pnCustomer_Log); // NOI18N

        pnAdmin_Log.setBackground(new java.awt.Color(0, 153, 204));
        pnAdmin_Log.setMaximumSize(new java.awt.Dimension(1000, 800));
        pnAdmin_Log.setMinimumSize(new java.awt.Dimension(1000, 800));
        pnAdmin_Log.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLayout2.setBackground(new java.awt.Color(0, 153, 204));
        pnLayout2.setMaximumSize(new java.awt.Dimension(810, 700));
        pnLayout2.setMinimumSize(new java.awt.Dimension(810, 700));
        pnLayout2.setPreferredSize(new java.awt.Dimension(810, 700));

        pnLogo2.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo2.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo2.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo2.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo_ATM.png"))); // NOI18N

        javax.swing.GroupLayout pnLogo2Layout = new javax.swing.GroupLayout(pnLogo2);
        pnLogo2.setLayout(pnLogo2Layout);
        pnLogo2Layout.setHorizontalGroup(
            pnLogo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
            .addGroup(pnLogo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnLogo2Layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(jLabel33)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );
        pnLogo2Layout.setVerticalGroup(
            pnLogo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
            .addGroup(pnLogo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnLogo2Layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(jLabel33)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );

        pnLayout2.add(pnLogo2);

        pnLogin_container1.setBackground(new java.awt.Color(0, 153, 204));
        pnLogin_container1.setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel25.setBackground(new java.awt.Color(255, 255, 204));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel25.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime7.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime7.setForeground(new java.awt.Color(255, 0, 0));
        lblTime7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime7.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel25.add(lblTime7);

        pnLogin_container1.add(jPanel25);

        lblError_Admin_Login.setForeground(new java.awt.Color(255, 0, 0));
        lblError_Admin_Login.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_Admin_Login.setPreferredSize(new java.awt.Dimension(400, 14));
        pnLogin_container1.add(lblError_Admin_Login);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Account :");
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 14));
        pnLogin_container1.add(jLabel4);

        txtAccount_Admin.setPreferredSize(new java.awt.Dimension(200, 20));
        pnLogin_container1.add(txtAccount_Admin);

        lbl3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl3.setPreferredSize(new java.awt.Dimension(100, 14));
        pnLogin_container1.add(lbl3);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("PIN :");
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 14));
        pnLogin_container1.add(jLabel5);

        txtPIN_Admin.setPreferredSize(new java.awt.Dimension(200, 20));
        pnLogin_container1.add(txtPIN_Admin);

        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl4.setPreferredSize(new java.awt.Dimension(100, 14));
        pnLogin_container1.add(lbl4);

        jLabel6.setPreferredSize(new java.awt.Dimension(50, 14));
        pnLogin_container1.add(jLabel6);

        btnAdm_Login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnLoginAdmin.png"))); // NOI18N
        btnAdm_Login.setText("Login");
        btnAdm_Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdm_LoginMouseClicked(evt);
            }
        });
        pnLogin_container1.add(btnAdm_Login);

        btnAdm_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClearA.png"))); // NOI18N
        btnAdm_Clear.setText("Clear");
        pnLogin_container1.add(btnAdm_Clear);

        btnAdm_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancelA.png"))); // NOI18N
        btnAdm_Exit.setText("Exit");
        pnLogin_container1.add(btnAdm_Exit);

        pnLayout2.add(pnLogin_container1);

        pnAdmin_Log.add(pnLayout2);

        tbnLogin.addTab("ADMIN", new javax.swing.ImageIcon(getClass().getResource("/icon/a.png")), pnAdmin_Log); // NOI18N

        pnFarther.add(tbnLogin, "Login");

        pnMenu_Cus.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Cus.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnMenu_Cus.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo3.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo3.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo3.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo3.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logo.png"))); // NOI18N
        pnLogo3.add(jLabel54);

        pnMenu_Cus.add(pnLogo3);

        pnMenu_Cus_Container.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Cus_Container.setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu Customer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(300, 450));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 450));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 450));

        btnCus_Desposit.setBackground(new java.awt.Color(255, 255, 255));
        btnCus_Desposit.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_Desposit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/CDesposit money cus.png"))); // NOI18N
        btnCus_Desposit.setText("Desposit ");
        btnCus_Desposit.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_Desposit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_DespositMouseClicked(evt);
            }
        });
        btnCus_Desposit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_DespositMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_Desposit);

        btnCus_Withdraw.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_Withdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cWithdraw.png"))); // NOI18N
        btnCus_Withdraw.setText("Withdraw");
        btnCus_Withdraw.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_Withdraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_WithdrawMouseClicked(evt);
            }
        });
        btnCus_Withdraw.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_WithdrawMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_Withdraw);

        btnCus_Transfer.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_Transfer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/CTransfer money cus.png"))); // NOI18N
        btnCus_Transfer.setText("Transfer");
        btnCus_Transfer.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_Transfer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_TransferMouseClicked(evt);
            }
        });
        btnCus_Transfer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_TransferMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_Transfer);

        btnCus_Blance.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_Blance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Cbalance customer.png"))); // NOI18N
        btnCus_Blance.setText("Balance");
        btnCus_Blance.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_Blance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_BlanceMouseClicked(evt);
            }
        });
        btnCus_Blance.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_BlanceMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_Blance);

        btnCus_ChangePin.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_ChangePin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Cchange pin customer.png"))); // NOI18N
        btnCus_ChangePin.setText("Change PIN");
        btnCus_ChangePin.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_ChangePin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_ChangePinMouseClicked(evt);
            }
        });
        btnCus_ChangePin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_ChangePinMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_ChangePin);
        btnCus_ChangePin.getAccessibleContext().setAccessibleName("ChangePIN");

        btnCus_Exit.setFont(new java.awt.Font("Calibri", 0, 18));
        btnCus_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/turnOff.png"))); // NOI18N
        btnCus_Exit.setText("Exit");
        btnCus_Exit.setPreferredSize(new java.awt.Dimension(200, 50));
        btnCus_Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCus_ExitMouseClicked(evt);
            }
        });
        btnCus_Exit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCus_ExitMouseMoved(evt);
            }
        });
        jPanel2.add(btnCus_Exit);

        pnMenu_Cus_Container.add(jPanel2);

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 450));

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime.setForeground(new java.awt.Color(255, 0, 0));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel5.add(lblTime);

        jPanel3.add(jPanel5);

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(390, 200));

        lblCus_Name.setForeground(new java.awt.Color(51, 0, 204));
        lblCus_Name.setPreferredSize(new java.awt.Dimension(350, 14));
        jPanel4.add(lblCus_Name);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Age :");
        jLabel7.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel4.add(jLabel7);

        lblCus_Age.setFont(new java.awt.Font("Calibri", 0, 11));
        lblCus_Age.setForeground(new java.awt.Color(51, 0, 204));
        lblCus_Age.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel4.add(lblCus_Age);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Phone :");
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel4.add(jLabel9);

        lblCus_Phone.setFont(new java.awt.Font("Calibri", 0, 11));
        lblCus_Phone.setForeground(new java.awt.Color(51, 0, 204));
        lblCus_Phone.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel4.add(lblCus_Phone);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Address :");
        jLabel8.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel4.add(jLabel8);

        lblCus_Address.setFont(new java.awt.Font("Calibri", 0, 11));
        lblCus_Address.setForeground(new java.awt.Color(51, 0, 204));
        lblCus_Address.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel4.add(lblCus_Address);

        jPanel3.add(jPanel4);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Notes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel6.setPreferredSize(new java.awt.Dimension(390, 130));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(350, 90));

        txtaCus_Notes.setBackground(new java.awt.Color(204, 255, 204));
        txtaCus_Notes.setColumns(20);
        txtaCus_Notes.setForeground(new java.awt.Color(255, 0, 0));
        txtaCus_Notes.setRows(5);
        txtaCus_Notes.setPreferredSize(new java.awt.Dimension(350, 90));
        jScrollPane1.setViewportView(txtaCus_Notes);

        jPanel6.add(jScrollPane1);

        jPanel3.add(jPanel6);

        pnMenu_Cus_Container.add(jPanel3);

        pnMenu_Cus.add(pnMenu_Cus_Container);

        pnFarther.add(pnMenu_Cus, "CusMenu");

        pnMenu_Adm.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Adm.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnMenu_Adm.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo4.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo4.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo4.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo4.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoAdmin.png"))); // NOI18N
        pnLogo4.add(jLabel55);

        pnMenu_Adm.add(pnLogo4);

        pnMenu_Cus_Container1.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Cus_Container1.setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel7.setBackground(new java.awt.Color(0, 153, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu Admin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel7.setMaximumSize(new java.awt.Dimension(300, 450));
        jPanel7.setMinimumSize(new java.awt.Dimension(300, 450));
        jPanel7.setPreferredSize(new java.awt.Dimension(300, 450));

        btnAdm_Create.setFont(new java.awt.Font("Calibri", 0, 18));
        btnAdm_Create.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/addUser.png"))); // NOI18N
        btnAdm_Create.setText("Create Account");
        btnAdm_Create.setPreferredSize(new java.awt.Dimension(200, 50));
        btnAdm_Create.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdm_CreateMouseClicked(evt);
            }
        });
        btnAdm_Create.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAdm_CreateMouseMoved(evt);
            }
        });
        jPanel7.add(btnAdm_Create);

        btnAdm_Management.setFont(new java.awt.Font("Calibri", 0, 18));
        btnAdm_Management.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/withdrawmoney.png"))); // NOI18N
        btnAdm_Management.setText("Management");
        btnAdm_Management.setPreferredSize(new java.awt.Dimension(200, 50));
        btnAdm_Management.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdm_ManagementMouseClicked(evt);
            }
        });
        btnAdm_Management.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAdm_ManagementMouseMoved(evt);
            }
        });
        jPanel7.add(btnAdm_Management);

        btnAdm_Bank.setFont(new java.awt.Font("Calibri", 0, 18));
        btnAdm_Bank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/DespositMoney.png"))); // NOI18N
        btnAdm_Bank.setText("Bank");
        btnAdm_Bank.setPreferredSize(new java.awt.Dimension(200, 50));
        btnAdm_Bank.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdm_BankMouseClicked(evt);
            }
        });
        btnAdm_Bank.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAdm_BankMouseMoved(evt);
            }
        });
        jPanel7.add(btnAdm_Bank);

        btnAdm_ChangePin.setFont(new java.awt.Font("Calibri", 0, 18));
        btnAdm_ChangePin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/resetPin.png"))); // NOI18N
        btnAdm_ChangePin.setText("Change PIN");
        btnAdm_ChangePin.setPreferredSize(new java.awt.Dimension(200, 50));
        btnAdm_ChangePin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdm_ChangePinMouseClicked(evt);
            }
        });
        btnAdm_ChangePin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAdm_ChangePinMouseMoved(evt);
            }
        });
        btnAdm_ChangePin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdm_ChangePinActionPerformed(evt);
            }
        });
        jPanel7.add(btnAdm_ChangePin);

        btnAd_Exit.setFont(new java.awt.Font("Calibri", 0, 18));
        btnAd_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/turnOff.png"))); // NOI18N
        btnAd_Exit.setText("Exit");
        btnAd_Exit.setPreferredSize(new java.awt.Dimension(200, 50));
        btnAd_Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAd_ExitMouseClicked(evt);
            }
        });
        btnAd_Exit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                btnAd_ExitMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnAd_ExitMouseMoved(evt);
            }
        });
        jPanel7.add(btnAd_Exit);

        pnMenu_Cus_Container1.add(jPanel7);

        jPanel8.setPreferredSize(new java.awt.Dimension(400, 450));

        jPanel9.setBackground(new java.awt.Color(255, 255, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel9.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime1.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime1.setForeground(new java.awt.Color(255, 0, 0));
        lblTime1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime1.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel9.add(lblTime1);

        jPanel8.add(jPanel9);

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(390, 200));

        lblAdm_Name.setForeground(new java.awt.Color(51, 0, 204));
        lblAdm_Name.setPreferredSize(new java.awt.Dimension(350, 14));
        jPanel10.add(lblAdm_Name);

        jLabel11.setForeground(new java.awt.Color(51, 0, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Age :");
        jLabel11.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel10.add(jLabel11);

        lblAdm_Age.setFont(new java.awt.Font("Calibri", 0, 11));
        lblAdm_Age.setForeground(new java.awt.Color(51, 0, 204));
        lblAdm_Age.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel10.add(lblAdm_Age);

        jLabel12.setForeground(new java.awt.Color(51, 0, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Phone :");
        jLabel12.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel10.add(jLabel12);

        lblAdm_Phone.setFont(new java.awt.Font("Calibri", 0, 11));
        lblAdm_Phone.setForeground(new java.awt.Color(51, 0, 204));
        lblAdm_Phone.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel10.add(lblAdm_Phone);

        jLabel10.setForeground(new java.awt.Color(51, 0, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Address :");
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 14));
        jPanel10.add(jLabel10);

        lblAdm_Address.setFont(new java.awt.Font("Calibri", 0, 11));
        lblAdm_Address.setForeground(new java.awt.Color(51, 0, 204));
        lblAdm_Address.setPreferredSize(new java.awt.Dimension(300, 14));
        jPanel10.add(lblAdm_Address);

        jPanel8.add(jPanel10);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Notes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel11.setPreferredSize(new java.awt.Dimension(390, 130));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(350, 90));

        txtaAdm_Notes.setBackground(new java.awt.Color(204, 255, 204));
        txtaAdm_Notes.setColumns(20);
        txtaAdm_Notes.setForeground(new java.awt.Color(255, 0, 0));
        txtaAdm_Notes.setRows(5);
        txtaAdm_Notes.setPreferredSize(new java.awt.Dimension(350, 90));
        jScrollPane2.setViewportView(txtaAdm_Notes);

        jPanel11.add(jScrollPane2);

        jPanel8.add(jPanel11);

        pnMenu_Cus_Container1.add(jPanel8);

        pnMenu_Adm.add(pnMenu_Cus_Container1);

        pnFarther.add(pnMenu_Adm, "AdmMenu");

        pnDesposit.setBackground(new java.awt.Color(0, 153, 204));
        pnDesposit.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnDesposit.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnDesposit.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo10.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo10.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo10.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo10.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoDesposit.png"))); // NOI18N
        pnLogo10.add(jLabel56);

        pnDesposit.add(pnLogo10);

        jPanel16.setBackground(new java.awt.Color(0, 153, 204));
        jPanel16.setMaximumSize(new java.awt.Dimension(500, 622));
        jPanel16.setMinimumSize(new java.awt.Dimension(500, 622));
        jPanel16.setPreferredSize(new java.awt.Dimension(500, 622));

        pnMenu_Desposit.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Desposit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Desposit", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        pnMenu_Desposit.setMaximumSize(new java.awt.Dimension(410, 520));
        pnMenu_Desposit.setMinimumSize(new java.awt.Dimension(410, 520));
        pnMenu_Desposit.setPreferredSize(new java.awt.Dimension(450, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel1.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime2.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime2.setForeground(new java.awt.Color(255, 0, 0));
        lblTime2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime2.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel1.add(lblTime2);

        pnMenu_Desposit.add(jPanel1);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("You have :");
        jLabel13.setPreferredSize(new java.awt.Dimension(150, 14));
        pnMenu_Desposit.add(jLabel13);

        lblAmount_Deposit_Display.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblAmount_Deposit_Display.setForeground(new java.awt.Color(255, 0, 0));
        lblAmount_Deposit_Display.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmount_Deposit_Display.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Desposit.add(lblAmount_Deposit_Display);

        jLabel14.setText("($)  in the Account");
        jLabel14.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Desposit.add(jLabel14);

        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel40.setText("Transaction:");
        jLabel40.setPreferredSize(new java.awt.Dimension(150, 14));
        pnMenu_Desposit.add(jLabel40);

        lblDeposit_Session.setForeground(new java.awt.Color(255, 0, 0));
        lblDeposit_Session.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDeposit_Session.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Desposit.add(lblDeposit_Session);

        jLabel49.setText("/5  in today");
        jLabel49.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Desposit.add(jLabel49);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Please enter amount to desposit !");
        jLabel15.setPreferredSize(new java.awt.Dimension(370, 14));
        pnMenu_Desposit.add(jLabel15);

        jLabel16.setForeground(new java.awt.Color(0, 0, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Amount :");
        jLabel16.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_Desposit.add(jLabel16);

        txtDeposit_Amount.setPreferredSize(new java.awt.Dimension(200, 20));
        pnMenu_Desposit.add(txtDeposit_Amount);

        jLabel17.setForeground(new java.awt.Color(255, 0, 51));
        jLabel17.setText("($)");
        jLabel17.setPreferredSize(new java.awt.Dimension(50, 14));
        pnMenu_Desposit.add(jLabel17);

        lblError_Deposit.setForeground(new java.awt.Color(255, 0, 0));
        lblError_Deposit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_Deposit.setPreferredSize(new java.awt.Dimension(350, 14));
        pnMenu_Desposit.add(lblError_Deposit);

        btnDesposit_Amount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnDesposit.png"))); // NOI18N
        btnDesposit_Amount.setText("Desposit");
        btnDesposit_Amount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesposit_AmountMouseClicked(evt);
            }
        });
        pnMenu_Desposit.add(btnDesposit_Amount);

        btnDesposit_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnDesposit_Clear.setText("Clear");
        btnDesposit_Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesposit_ClearMouseClicked(evt);
            }
        });
        pnMenu_Desposit.add(btnDesposit_Clear);

        btnDesposit_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancel.png"))); // NOI18N
        btnDesposit_Cancel.setText("Cancel");
        btnDesposit_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesposit_CancelMouseClicked(evt);
            }
        });
        pnMenu_Desposit.add(btnDesposit_Cancel);

        pnK2.setBackground(new java.awt.Color(0, 153, 204));
        pnK2.setMaximumSize(new java.awt.Dimension(200, 290));
        pnK2.setMinimumSize(new java.awt.Dimension(200, 290));
        pnK2.setPreferredSize(new java.awt.Dimension(200, 350));

        btn20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.GIF"))); // NOI18N
        btn20.setPreferredSize(new java.awt.Dimension(50, 50));
        btn20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn20MouseClicked(evt);
            }
        });
        pnK2.add(btn20);

        btn21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.GIF"))); // NOI18N
        btn21.setPreferredSize(new java.awt.Dimension(50, 50));
        btn21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn21MouseClicked(evt);
            }
        });
        pnK2.add(btn21);

        btn22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.GIF"))); // NOI18N
        btn22.setPreferredSize(new java.awt.Dimension(50, 50));
        btn22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn22MouseClicked(evt);
            }
        });
        pnK2.add(btn22);

        btn23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.GIF"))); // NOI18N
        btn23.setPreferredSize(new java.awt.Dimension(50, 50));
        btn23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn23MouseClicked(evt);
            }
        });
        pnK2.add(btn23);

        btn24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.GIF"))); // NOI18N
        btn24.setPreferredSize(new java.awt.Dimension(50, 50));
        btn24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn24MouseClicked(evt);
            }
        });
        pnK2.add(btn24);

        btn25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.GIF"))); // NOI18N
        btn25.setPreferredSize(new java.awt.Dimension(50, 50));
        btn25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn25MouseClicked(evt);
            }
        });
        pnK2.add(btn25);

        btn26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.GIF"))); // NOI18N
        btn26.setPreferredSize(new java.awt.Dimension(50, 50));
        btn26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn26MouseClicked(evt);
            }
        });
        pnK2.add(btn26);

        btn27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.GIF"))); // NOI18N
        btn27.setPreferredSize(new java.awt.Dimension(50, 50));
        btn27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn27MouseClicked(evt);
            }
        });
        pnK2.add(btn27);

        btn28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.GIF"))); // NOI18N
        btn28.setPreferredSize(new java.awt.Dimension(50, 50));
        btn28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn28MouseClicked(evt);
            }
        });
        pnK2.add(btn28);

        btnBack2.setForeground(new java.awt.Color(255, 0, 0));
        btnBack2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBackspace.png"))); // NOI18N
        btnBack2.setPreferredSize(new java.awt.Dimension(105, 50));
        btnBack2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBack2MouseClicked(evt);
            }
        });
        pnK2.add(btnBack2);

        btn29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/0.png"))); // NOI18N
        btn29.setPreferredSize(new java.awt.Dimension(50, 50));
        btn29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn29MouseClicked(evt);
            }
        });
        pnK2.add(btn29);

        pnMenu_Desposit.add(pnK2);

        jPanel16.add(pnMenu_Desposit);

        pnDesposit.add(jPanel16);

        pnLayout_Desposit.setBackground(new java.awt.Color(0, 153, 204));
        pnDesposit.add(pnLayout_Desposit);

        pnFarther.add(pnDesposit, "Desposit");

        pnWithdraw.setBackground(new java.awt.Color(0, 153, 204));
        pnWithdraw.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnWithdraw.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnWithdraw.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo6.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo6.setMaximumSize(new java.awt.Dimension(810, 110));
        pnLogo6.setMinimumSize(new java.awt.Dimension(810, 110));
        pnLogo6.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel71.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoWithdraw.png"))); // NOI18N
        pnLogo6.add(jLabel71);

        pnWithdraw.add(pnLogo6);

        jPanel18.setBackground(new java.awt.Color(0, 153, 204));
        jPanel18.setMaximumSize(new java.awt.Dimension(550, 622));
        jPanel18.setMinimumSize(new java.awt.Dimension(550, 622));
        jPanel18.setPreferredSize(new java.awt.Dimension(550, 622));

        pnMenu_Withdraw.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Withdraw.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Withdraw", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri 18", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        pnMenu_Withdraw.setMaximumSize(new java.awt.Dimension(410, 520));
        pnMenu_Withdraw.setMinimumSize(new java.awt.Dimension(410, 520));
        pnMenu_Withdraw.setPreferredSize(new java.awt.Dimension(410, 600));

        jPanel12.setBackground(new java.awt.Color(255, 255, 204));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel12.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel12.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime3.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime3.setForeground(new java.awt.Color(255, 0, 0));
        lblTime3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime3.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel12.add(lblTime3);

        pnMenu_Withdraw.add(jPanel12);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("You have :");
        jLabel24.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Withdraw.add(jLabel24);

        lblAmount_Withdraw_Display.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblAmount_Withdraw_Display.setForeground(new java.awt.Color(255, 0, 0));
        lblAmount_Withdraw_Display.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmount_Withdraw_Display.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Withdraw.add(lblAmount_Withdraw_Display);

        jLabel25.setText("( $ ) in the Account");
        jLabel25.setPreferredSize(new java.awt.Dimension(170, 14));
        pnMenu_Withdraw.add(jLabel25);

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("Transaction:");
        jLabel30.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Withdraw.add(jLabel30);

        lblWithdraw_Session.setForeground(new java.awt.Color(255, 0, 0));
        lblWithdraw_Session.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWithdraw_Session.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Withdraw.add(lblWithdraw_Session);

        jLabel32.setText("/5  in today");
        jLabel32.setPreferredSize(new java.awt.Dimension(170, 14));
        pnMenu_Withdraw.add(jLabel32);

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Please enter amount to Withdrawn !");
        jLabel26.setPreferredSize(new java.awt.Dimension(370, 14));
        pnMenu_Withdraw.add(jLabel26);

        jLabel27.setForeground(new java.awt.Color(0, 0, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Amount :");
        jLabel27.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_Withdraw.add(jLabel27);

        txtWithdraw_Amount.setPreferredSize(new java.awt.Dimension(200, 20));
        pnMenu_Withdraw.add(txtWithdraw_Amount);

        jLabel29.setForeground(new java.awt.Color(255, 51, 51));
        jLabel29.setText("($)");
        jLabel29.setPreferredSize(new java.awt.Dimension(50, 14));
        pnMenu_Withdraw.add(jLabel29);

        lblError_Withdraw.setForeground(new java.awt.Color(255, 0, 0));
        lblError_Withdraw.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_Withdraw.setPreferredSize(new java.awt.Dimension(350, 14));
        pnMenu_Withdraw.add(lblError_Withdraw);

        btnWithdrawn_Amount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnWithdraw.png"))); // NOI18N
        btnWithdrawn_Amount.setText("Withdraw");
        btnWithdrawn_Amount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnWithdrawn_AmountMouseClicked(evt);
            }
        });
        pnMenu_Withdraw.add(btnWithdrawn_Amount);

        btnClear_Withdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnClear_Withdraw.setText("Clear");
        btnClear_Withdraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClear_WithdrawMouseClicked(evt);
            }
        });
        pnMenu_Withdraw.add(btnClear_Withdraw);

        btnCancel_Withdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancel.png"))); // NOI18N
        btnCancel_Withdraw.setText("Cancel");
        btnCancel_Withdraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel_WithdrawMouseClicked(evt);
            }
        });
        pnMenu_Withdraw.add(btnCancel_Withdraw);

        lblAlert.setForeground(new java.awt.Color(255, 0, 0));
        lblAlert.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAlert.setPreferredSize(new java.awt.Dimension(350, 14));
        pnMenu_Withdraw.add(lblAlert);

        pnK3.setBackground(new java.awt.Color(0, 153, 204));
        pnK3.setMaximumSize(new java.awt.Dimension(200, 290));
        pnK3.setMinimumSize(new java.awt.Dimension(200, 290));
        pnK3.setPreferredSize(new java.awt.Dimension(200, 350));

        btn30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.GIF"))); // NOI18N
        btn30.setPreferredSize(new java.awt.Dimension(50, 50));
        btn30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn30MouseClicked(evt);
            }
        });
        pnK3.add(btn30);

        btn31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.GIF"))); // NOI18N
        btn31.setPreferredSize(new java.awt.Dimension(50, 50));
        btn31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn31MouseClicked(evt);
            }
        });
        pnK3.add(btn31);

        btn32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.GIF"))); // NOI18N
        btn32.setPreferredSize(new java.awt.Dimension(50, 50));
        btn32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn32MouseClicked(evt);
            }
        });
        pnK3.add(btn32);

        btn33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.GIF"))); // NOI18N
        btn33.setPreferredSize(new java.awt.Dimension(50, 50));
        btn33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn33MouseClicked(evt);
            }
        });
        pnK3.add(btn33);

        btn34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.GIF"))); // NOI18N
        btn34.setPreferredSize(new java.awt.Dimension(50, 50));
        btn34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn34MouseClicked(evt);
            }
        });
        pnK3.add(btn34);

        btn35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.GIF"))); // NOI18N
        btn35.setPreferredSize(new java.awt.Dimension(50, 50));
        btn35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn35MouseClicked(evt);
            }
        });
        pnK3.add(btn35);

        btn36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.GIF"))); // NOI18N
        btn36.setPreferredSize(new java.awt.Dimension(50, 50));
        btn36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn36MouseClicked(evt);
            }
        });
        pnK3.add(btn36);

        btn37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.GIF"))); // NOI18N
        btn37.setPreferredSize(new java.awt.Dimension(50, 50));
        btn37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn37MouseClicked(evt);
            }
        });
        pnK3.add(btn37);

        btn38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.GIF"))); // NOI18N
        btn38.setPreferredSize(new java.awt.Dimension(50, 50));
        btn38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn38MouseClicked(evt);
            }
        });
        pnK3.add(btn38);

        btnBack3.setForeground(new java.awt.Color(255, 0, 0));
        btnBack3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBackspace.png"))); // NOI18N
        btnBack3.setPreferredSize(new java.awt.Dimension(105, 50));
        btnBack3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBack3MouseClicked(evt);
            }
        });
        pnK3.add(btnBack3);

        btn39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/0.png"))); // NOI18N
        btn39.setPreferredSize(new java.awt.Dimension(50, 50));
        btn39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn39MouseClicked(evt);
            }
        });
        pnK3.add(btn39);

        pnMenu_Withdraw.add(pnK3);

        jPanel18.add(pnMenu_Withdraw);

        pnWithdraw.add(jPanel18);

        pnFarther.add(pnWithdraw, "Withdraw");

        pnTransfer.setBackground(new java.awt.Color(0, 153, 204));
        pnTransfer.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnTransfer.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnTransfer.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo7.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo7.setMaximumSize(new java.awt.Dimension(810, 110));

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoTransfer.png"))); // NOI18N
        pnLogo7.add(jLabel72);

        pnTransfer.add(pnLogo7);

        jPanel31.setBackground(new java.awt.Color(0, 153, 204));
        jPanel31.setMaximumSize(new java.awt.Dimension(550, 712));
        jPanel31.setMinimumSize(new java.awt.Dimension(550, 712));
        jPanel31.setPreferredSize(new java.awt.Dimension(550, 712));

        pnMenu_Transfer.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_Transfer.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transfer money", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 204))); // NOI18N
        pnMenu_Transfer.setMaximumSize(new java.awt.Dimension(450, 690));
        pnMenu_Transfer.setMinimumSize(new java.awt.Dimension(450, 690));
        pnMenu_Transfer.setPreferredSize(new java.awt.Dimension(450, 690));

        jPanel13.setBackground(new java.awt.Color(255, 255, 204));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel13.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel13.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime4.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime4.setForeground(new java.awt.Color(255, 0, 0));
        lblTime4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime4.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel13.add(lblTime4);

        pnMenu_Transfer.add(jPanel13);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("You have :");
        jLabel34.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(jLabel34);

        lblAmount_Transfer_Display.setFont(new java.awt.Font("Tahoma 14", 0, 12));
        lblAmount_Transfer_Display.setForeground(new java.awt.Color(255, 0, 0));
        lblAmount_Transfer_Display.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmount_Transfer_Display.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(lblAmount_Transfer_Display);

        jLabel35.setText("( $ ) in the Account");
        jLabel35.setPreferredSize(new java.awt.Dimension(170, 14));
        pnMenu_Transfer.add(jLabel35);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Transaction:");
        jLabel36.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(jLabel36);

        lblTransfer_Session.setForeground(new java.awt.Color(255, 0, 0));
        lblTransfer_Session.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTransfer_Session.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(lblTransfer_Session);

        jLabel37.setText("/5  in today");
        jLabel37.setPreferredSize(new java.awt.Dimension(170, 14));
        pnMenu_Transfer.add(jLabel37);

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Please enter amount to Transfermoney !");
        jLabel38.setPreferredSize(new java.awt.Dimension(370, 14));
        pnMenu_Transfer.add(jLabel38);

        jLabel39.setForeground(new java.awt.Color(0, 0, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("Amount :");
        jLabel39.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(jLabel39);

        txtTransfer_Amount.setEnabled(false);
        txtTransfer_Amount.setPreferredSize(new java.awt.Dimension(200, 20));
        txtTransfer_Amount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTransfer_AmountMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtTransfer_AmountMouseExited(evt);
            }
        });
        pnMenu_Transfer.add(txtTransfer_Amount);

        lblError_Transfer_Amount.setForeground(new java.awt.Color(255, 51, 51));
        lblError_Transfer_Amount.setText("($)");
        lblError_Transfer_Amount.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_Transfer.add(lblError_Transfer_Amount);

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Please enter Account number to Transfermoney !");
        jLabel41.setPreferredSize(new java.awt.Dimension(370, 14));
        pnMenu_Transfer.add(jLabel41);

        jLabel42.setForeground(new java.awt.Color(0, 0, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("To:");
        jLabel42.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_Transfer.add(jLabel42);

        txtTransfer_ToAccountNumber.setEnabled(false);
        txtTransfer_ToAccountNumber.setPreferredSize(new java.awt.Dimension(200, 20));
        txtTransfer_ToAccountNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTransfer_ToAccountNumberMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtTransfer_ToAccountNumberMouseExited(evt);
            }
        });
        pnMenu_Transfer.add(txtTransfer_ToAccountNumber);

        lblError_Transfer_To.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_Transfer.add(lblError_Transfer_To);

        lblError_Transfer.setForeground(new java.awt.Color(255, 0, 51));
        lblError_Transfer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_Transfer.setPreferredSize(new java.awt.Dimension(350, 14));
        pnMenu_Transfer.add(lblError_Transfer);

        btnTransfer_ToAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/TransferTo.png"))); // NOI18N
        btnTransfer_ToAccount.setText("Transfer");
        btnTransfer_ToAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransfer_ToAccountMouseClicked(evt);
            }
        });
        pnMenu_Transfer.add(btnTransfer_ToAccount);

        btnClear_Withdraw1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnClear_Withdraw1.setText("Clear");
        btnClear_Withdraw1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClear_Withdraw1MouseClicked(evt);
            }
        });
        pnMenu_Transfer.add(btnClear_Withdraw1);

        btnCancel_Withdraw1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancel.png"))); // NOI18N
        btnCancel_Withdraw1.setText("Cancel");
        btnCancel_Withdraw1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel_Withdraw1MouseClicked(evt);
            }
        });
        pnMenu_Transfer.add(btnCancel_Withdraw1);

        pnK1.setBackground(new java.awt.Color(0, 153, 204));
        pnK1.setMaximumSize(new java.awt.Dimension(200, 290));
        pnK1.setMinimumSize(new java.awt.Dimension(200, 290));
        pnK1.setPreferredSize(new java.awt.Dimension(200, 290));

        btn10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.GIF"))); // NOI18N
        btn10.setPreferredSize(new java.awt.Dimension(50, 50));
        btn10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn10MouseClicked(evt);
            }
        });
        pnK1.add(btn10);

        btn11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.GIF"))); // NOI18N
        btn11.setPreferredSize(new java.awt.Dimension(50, 50));
        btn11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn11MouseClicked(evt);
            }
        });
        pnK1.add(btn11);

        btn12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.GIF"))); // NOI18N
        btn12.setPreferredSize(new java.awt.Dimension(50, 50));
        btn12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn12MouseClicked(evt);
            }
        });
        pnK1.add(btn12);

        btn13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.GIF"))); // NOI18N
        btn13.setPreferredSize(new java.awt.Dimension(50, 50));
        btn13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn13MouseClicked(evt);
            }
        });
        pnK1.add(btn13);

        btn14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.GIF"))); // NOI18N
        btn14.setPreferredSize(new java.awt.Dimension(50, 50));
        btn14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn14MouseClicked(evt);
            }
        });
        pnK1.add(btn14);

        btn15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.GIF"))); // NOI18N
        btn15.setPreferredSize(new java.awt.Dimension(50, 50));
        btn15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn15MouseClicked(evt);
            }
        });
        pnK1.add(btn15);

        btn16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.GIF"))); // NOI18N
        btn16.setPreferredSize(new java.awt.Dimension(50, 50));
        btn16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn16MouseClicked(evt);
            }
        });
        pnK1.add(btn16);

        btn17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.GIF"))); // NOI18N
        btn17.setPreferredSize(new java.awt.Dimension(50, 50));
        btn17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn17MouseClicked(evt);
            }
        });
        pnK1.add(btn17);

        btn18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.GIF"))); // NOI18N
        btn18.setPreferredSize(new java.awt.Dimension(50, 50));
        btn18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn18MouseClicked(evt);
            }
        });
        pnK1.add(btn18);

        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBackspace.png"))); // NOI18N
        btnBack1.setPreferredSize(new java.awt.Dimension(105, 50));
        btnBack1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBack1MouseClicked(evt);
            }
        });
        pnK1.add(btnBack1);

        btn19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/0.png"))); // NOI18N
        btn19.setPreferredSize(new java.awt.Dimension(50, 50));
        btn19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn19MouseClicked(evt);
            }
        });
        pnK1.add(btn19);

        pnMenu_Transfer.add(pnK1);

        jPanel31.add(pnMenu_Transfer);

        pnTransfer.add(jPanel31);

        pnFarther.add(pnTransfer, "Transfer");

        pnManagement.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnManagement.setPreferredSize(new java.awt.Dimension(1000, 700));
        pnManagement.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setBackground(new java.awt.Color(0, 153, 204));
        jTabbedPane1.setForeground(new java.awt.Color(102, 102, 0));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(810, 110));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(810, 110));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(810, 110));

        tabDeposit.setBackground(new java.awt.Color(255, 255, 204));
        tabDeposit.setMaximumSize(new java.awt.Dimension(922, 771));
        tabDeposit.setMinimumSize(new java.awt.Dimension(900, 700));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setMaximumSize(new java.awt.Dimension(810, 110));
        jPanel14.setMinimumSize(new java.awt.Dimension(810, 110));
        jPanel14.setPreferredSize(new java.awt.Dimension(810, 110));

        jLabel23.setBackground(new java.awt.Color(255, 255, 204));
        jLabel23.setFont(new java.awt.Font("Tahoma 36", 0, 36));
        jLabel23.setForeground(new java.awt.Color(0, 0, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logotransaction.png"))); // NOI18N
        jPanel14.add(jLabel23);

        tabDeposit.add(jPanel14);

        pnDeList.setBackground(new java.awt.Color(153, 255, 0));
        pnDeList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List Transaction", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        pnDeList.setMaximumSize(new java.awt.Dimension(800, 600));
        pnDeList.setMinimumSize(new java.awt.Dimension(800, 300));
        pnDeList.setPreferredSize(new java.awt.Dimension(800, 600));
        pnDeList.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        cmbManagement.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "List desposit money", "List withdraw money", "List transfer money" }));
        cmbManagement.setMaximumSize(new java.awt.Dimension(200, 20));
        cmbManagement.setMinimumSize(new java.awt.Dimension(200, 20));
        cmbManagement.setPreferredSize(new java.awt.Dimension(200, 20));
        cmbManagement.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbManagementItemStateChanged(evt);
            }
        });
        pnDeList.add(cmbManagement);

        jLabel31.setText("Filter by");
        pnDeList.add(jLabel31);

        cmbFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Today", "Ten days ago", "Last month" }));
        cmbFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFilterItemStateChanged(evt);
            }
        });
        pnDeList.add(cmbFilter);

        lblTime11.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime11.setForeground(new java.awt.Color(255, 0, 0));
        lblTime11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime11.setPreferredSize(new java.awt.Dimension(350, 50));
        pnDeList.add(lblTime11);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(780, 300));

        tbDesposit.setBackground(new java.awt.Color(255, 255, 204));
        tbDesposit.setFont(new java.awt.Font("Calibri", 0, 12));
        tbDesposit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDesposit.setMaximumSize(new java.awt.Dimension(750, 300));
        tbDesposit.setMinimumSize(new java.awt.Dimension(750, 300));
        tbDesposit.setPreferredSize(new java.awt.Dimension(750, 300));
        tbDesposit.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDesposit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDespositMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbDesposit);

        pnDeList.add(jScrollPane3);

        btnDesposit_Accept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/check (3).png"))); // NOI18N
        btnDesposit_Accept.setText("Accept");
        btnDesposit_Accept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDesposit_AcceptMouseClicked(evt);
            }
        });
        pnDeList.add(btnDesposit_Accept);

        btnExit_Manager1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/turnOff.png"))); // NOI18N
        btnExit_Manager1.setText("Exit");
        btnExit_Manager1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExit_Manager1MouseClicked(evt);
            }
        });
        pnDeList.add(btnExit_Manager1);

        tabDeposit.add(pnDeList);

        jTabbedPane1.addTab("Management Transaction", new javax.swing.ImageIcon(getClass().getResource("/icon/DespositMoney.png")), tabDeposit); // NOI18N

        tabResetPIN.setBackground(new java.awt.Color(255, 255, 204));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel20.setPreferredSize(new java.awt.Dimension(800, 100));

        jLabel45.setFont(new java.awt.Font("Tahoma 36 36 36", 0, 36));
        jLabel45.setForeground(new java.awt.Color(0, 0, 255));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoResetPin.png"))); // NOI18N
        jLabel45.setRequestFocusEnabled(false);
        jPanel20.add(jLabel45);

        tabResetPIN.add(jPanel20);

        pnDeList3.setBackground(new java.awt.Color(153, 255, 0));
        pnDeList3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reset Pin for User", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        pnDeList3.setMaximumSize(new java.awt.Dimension(800, 600));
        pnDeList3.setMinimumSize(new java.awt.Dimension(800, 300));
        pnDeList3.setPreferredSize(new java.awt.Dimension(800, 600));
        pnDeList3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        lblTime12.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime12.setForeground(new java.awt.Color(255, 0, 0));
        lblTime12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime12.setPreferredSize(new java.awt.Dimension(350, 50));
        pnDeList3.add(lblTime12);

        jScrollPane6.setPreferredSize(new java.awt.Dimension(780, 300));

        tblReSetPIN.setBackground(new java.awt.Color(255, 255, 204));
        tblReSetPIN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblReSetPIN.setPreferredSize(new java.awt.Dimension(750, 300));
        jScrollPane6.setViewportView(tblReSetPIN);

        pnDeList3.add(jScrollPane6);

        btnReset_PIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnResetPin.png"))); // NOI18N
        btnReset_PIN.setText("Reset PIN");
        btnReset_PIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReset_PINMouseClicked(evt);
            }
        });
        pnDeList3.add(btnReset_PIN);

        btnRefreshPIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btnRefreshPIN.setText("Refresh");
        btnRefreshPIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRefreshPINMouseClicked(evt);
            }
        });
        pnDeList3.add(btnRefreshPIN);

        btnExit_Manager4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/turnOff.png"))); // NOI18N
        btnExit_Manager4.setText("Exit");
        btnExit_Manager4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExit_Manager4MouseClicked(evt);
            }
        });
        pnDeList3.add(btnExit_Manager4);

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setPreferredSize(new java.awt.Dimension(750, 100));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        pnDeList3.add(jPanel21);

        tabResetPIN.add(pnDeList3);

        jTabbedPane1.addTab("Reset PIN", new javax.swing.ImageIcon(getClass().getResource("/icon/resetPin.png")), tabResetPIN); // NOI18N

        tabListUser.setBackground(new java.awt.Color(255, 255, 204));

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel28.setPreferredSize(new java.awt.Dimension(800, 100));

        jLabel53.setFont(new java.awt.Font("Tahoma 36 36 36", 0, 36));
        jLabel53.setForeground(new java.awt.Color(0, 0, 255));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoListUser.png"))); // NOI18N
        jPanel28.add(jLabel53);

        tabListUser.add(jPanel28);

        pnDeList4.setBackground(new java.awt.Color(153, 255, 0));
        pnDeList4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List User", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        pnDeList4.setMaximumSize(new java.awt.Dimension(800, 600));
        pnDeList4.setMinimumSize(new java.awt.Dimension(800, 300));
        pnDeList4.setPreferredSize(new java.awt.Dimension(800, 600));

        lblTime13.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime13.setForeground(new java.awt.Color(255, 0, 0));
        lblTime13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime13.setPreferredSize(new java.awt.Dimension(350, 50));
        pnDeList4.add(lblTime13);

        jScrollPane7.setPreferredSize(new java.awt.Dimension(780, 300));

        tblListUserStatus.setBackground(new java.awt.Color(255, 255, 204));
        tblListUserStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblListUserStatus.setPreferredSize(new java.awt.Dimension(750, 300));
        tblListUserStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListUserStatusMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblListUserStatus);

        pnDeList4.add(jScrollPane7);

        btnDisable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnDisable.png"))); // NOI18N
        btnDisable.setText("Disable");
        btnDisable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDisableMouseClicked(evt);
            }
        });
        pnDeList4.add(btnDisable);

        btnEnable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnEnable.png"))); // NOI18N
        btnEnable.setText("Enable");
        btnEnable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnableMouseClicked(evt);
            }
        });
        pnDeList4.add(btnEnable);

        btnExit_Manager5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/turnOff.png"))); // NOI18N
        btnExit_Manager5.setText("Exit");
        btnExit_Manager5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExit_Manager5MouseClicked(evt);
            }
        });
        pnDeList4.add(btnExit_Manager5);

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setPreferredSize(new java.awt.Dimension(750, 100));

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        pnDeList4.add(jPanel30);

        tabListUser.add(pnDeList4);

        jTabbedPane1.addTab("List user", new javax.swing.ImageIcon(getClass().getResource("/icon/ListUser.png")), tabListUser); // NOI18N

        pnManagement.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pnFarther.add(pnManagement, "Management");

        pnCreate_Account.setBackground(new java.awt.Color(0, 153, 204));
        pnCreate_Account.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnCreate_Account.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnCreate_Account.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo8.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo8.setMaximumSize(new java.awt.Dimension(810, 110));

        jLabel73.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoNewAcc.png"))); // NOI18N
        pnLogo8.add(jLabel73);

        pnCreate_Account.add(pnLogo8);

        jPanel17.setBackground(new java.awt.Color(0, 153, 204));
        jPanel17.setPreferredSize(new java.awt.Dimension(500, 522));

        jPanel22.setBackground(new java.awt.Color(0, 153, 204));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create New Account", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 18), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel22.setMaximumSize(new java.awt.Dimension(450, 500));
        jPanel22.setMinimumSize(new java.awt.Dimension(450, 500));
        jPanel22.setPreferredSize(new java.awt.Dimension(450, 500));

        jPanel24.setBackground(new java.awt.Color(255, 255, 204));
        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel24.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel24.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime6.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime6.setForeground(new java.awt.Color(255, 0, 0));
        lblTime6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime6.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel24.add(lblTime6);

        jPanel22.add(jPanel24);

        lblErrorAccount.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblErrorAccount.setPreferredSize(new java.awt.Dimension(370, 14));
        jPanel22.add(lblErrorAccount);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Account Number :");
        jLabel18.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel18);

        txtNewAccount.setPreferredSize(new java.awt.Dimension(150, 20));
        txtNewAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtNewAccountMouseExited(evt);
            }
        });
        jPanel22.add(txtNewAccount);

        lblErrorNewAccount.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(lblErrorNewAccount);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Level :");
        jLabel20.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel20);

        cmbNewLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "USER", "ADMIN" }));
        cmbNewLevel.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(cmbNewLevel);

        jLabel22.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(jLabel22);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Type :");
        jLabel21.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel21);

        cmbNewType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Desposit", "Transfer" }));
        cmbNewType.setMaximumSize(new java.awt.Dimension(150, 20));
        cmbNewType.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(cmbNewType);

        jLabel28.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(jLabel28);

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("Amount :");
        jLabel43.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel43);

        txtNewAmount.setPreferredSize(new java.awt.Dimension(150, 20));
        txtNewAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtNewAmountMouseExited(evt);
            }
        });
        jPanel22.add(txtNewAmount);

        lblErrorNewAmount.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorNewAmount.setText("($)");
        lblErrorNewAmount.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(lblErrorNewAmount);

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("Fullname :");
        jLabel44.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel44);

        txtNewFullName.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(txtNewFullName);

        lblErrorNewGender.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(lblErrorNewGender);

        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel46.setText("Gender:");
        jLabel46.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel46);

        btnMale.setBackground(new java.awt.Color(255, 255, 255));
        btnMale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/male.GIF"))); // NOI18N
        btnMale.setEnabled(false);
        btnMale.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMale.setPreferredSize(new java.awt.Dimension(40, 40));
        btnMale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMaleMouseClicked(evt);
            }
        });
        jPanel22.add(btnMale);

        btnFemale.setBackground(new java.awt.Color(255, 255, 255));
        btnFemale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/female.GIF"))); // NOI18N
        btnFemale.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnFemale.setPreferredSize(new java.awt.Dimension(40, 40));
        btnFemale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFemaleMouseClicked(evt);
            }
        });
        jPanel22.add(btnFemale);

        lblErrorNewAge.setPreferredSize(new java.awt.Dimension(130, 14));
        jPanel22.add(lblErrorNewAge);

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel47.setText("Age :");
        jLabel47.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel47);

        txtNewAge.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(txtNewAge);

        lblErrorNewFullName.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(lblErrorNewFullName);

        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel48.setText("Phone :");
        jLabel48.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel48);

        txtNewPhone.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(txtNewPhone);

        lblErrorNewPhone.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(lblErrorNewPhone);

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel50.setText("Address :");
        jLabel50.setPreferredSize(new java.awt.Dimension(150, 14));
        jPanel22.add(jLabel50);

        txtAreaAddress.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel22.add(txtAreaAddress);

        jLabel51.setPreferredSize(new java.awt.Dimension(70, 14));
        jPanel22.add(jLabel51);

        jLabel52.setForeground(new java.awt.Color(255, 0, 51));
        jLabel52.setPreferredSize(new java.awt.Dimension(370, 14));
        jPanel22.add(jLabel52);

        btnNewCreateAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/addUser.png"))); // NOI18N
        btnNewCreateAccount.setText("Create");
        btnNewCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCreateAccountActionPerformed(evt);
            }
        });
        jPanel22.add(btnNewCreateAccount);

        btnNewClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClearA.png"))); // NOI18N
        btnNewClear.setText("Clear");
        btnNewClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewClearMouseClicked(evt);
            }
        });
        jPanel22.add(btnNewClear);

        btnNewCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancelA.png"))); // NOI18N
        btnNewCancel.setText("Cancel");
        btnNewCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewCancelMouseClicked(evt);
            }
        });
        jPanel22.add(btnNewCancel);

        jPanel17.add(jPanel22);

        pnCreate_Account.add(jPanel17);

        pnFarther.add(pnCreate_Account, "CreateAcc");

        pnChange_PinADMIN.setBackground(new java.awt.Color(0, 153, 204));
        pnChange_PinADMIN.setMaximumSize(new java.awt.Dimension(1000, 700));
        pnChange_PinADMIN.setMinimumSize(new java.awt.Dimension(1000, 700));
        pnChange_PinADMIN.setPreferredSize(new java.awt.Dimension(1000, 700));

        pnLogo9.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo9.setMaximumSize(new java.awt.Dimension(810, 110));

        jLabel74.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoChangePin.png"))); // NOI18N
        pnLogo9.add(jLabel74);

        pnChange_PinADMIN.add(pnLogo9);

        jPanel32.setBackground(new java.awt.Color(0, 153, 204));
        jPanel32.setMaximumSize(new java.awt.Dimension(550, 712));
        jPanel32.setMinimumSize(new java.awt.Dimension(550, 712));
        jPanel32.setPreferredSize(new java.awt.Dimension(550, 712));

        pn_Menu_ChangePIN_Admin.setBackground(new java.awt.Color(0, 153, 204));
        pn_Menu_ChangePIN_Admin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Change PIN ADMIN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 204))); // NOI18N
        pn_Menu_ChangePIN_Admin.setMaximumSize(new java.awt.Dimension(410, 520));
        pn_Menu_ChangePIN_Admin.setMinimumSize(new java.awt.Dimension(410, 520));
        pn_Menu_ChangePIN_Admin.setPreferredSize(new java.awt.Dimension(450, 690));

        jPanel26.setBackground(new java.awt.Color(255, 255, 204));
        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel26.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel26.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime8.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime8.setForeground(new java.awt.Color(255, 0, 0));
        lblTime8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime8.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel26.add(lblTime8);

        pn_Menu_ChangePIN_Admin.add(jPanel26);

        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setPreferredSize(new java.awt.Dimension(370, 14));
        pn_Menu_ChangePIN_Admin.add(jLabel57);

        jLabel58.setForeground(new java.awt.Color(0, 0, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel58.setText("Old PIN:");
        jLabel58.setPreferredSize(new java.awt.Dimension(100, 14));
        pn_Menu_ChangePIN_Admin.add(jLabel58);

        txtChangePin_Old_Admin.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChangePin_Old_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtChangePin_Old_AdminMouseExited(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(txtChangePin_Old_Admin);

        lblError_AChangePin_Old.setForeground(new java.awt.Color(255, 0, 0));
        lblError_AChangePin_Old.setPreferredSize(new java.awt.Dimension(70, 14));
        pn_Menu_ChangePIN_Admin.add(lblError_AChangePin_Old);

        jLabel60.setForeground(new java.awt.Color(0, 0, 255));
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel60.setText("New PIN:");
        jLabel60.setPreferredSize(new java.awt.Dimension(100, 14));
        pn_Menu_ChangePIN_Admin.add(jLabel60);

        txtChangePin_New_Admin.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChangePin_New_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtChangePin_New_AdminMouseExited(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(txtChangePin_New_Admin);

        lblError_AChangePin_new.setForeground(new java.awt.Color(255, 0, 0));
        lblError_AChangePin_new.setPreferredSize(new java.awt.Dimension(70, 14));
        pn_Menu_ChangePIN_Admin.add(lblError_AChangePin_new);

        jLabel61.setForeground(new java.awt.Color(0, 0, 255));
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel61.setText("New PIN again:");
        jLabel61.setPreferredSize(new java.awt.Dimension(100, 14));
        pn_Menu_ChangePIN_Admin.add(jLabel61);

        txtChangePin_NewR_Admin.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChangePin_NewR_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtChangePin_NewR_AdminMouseExited(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(txtChangePin_NewR_Admin);

        lblError_AChangePin_newR.setForeground(new java.awt.Color(255, 0, 0));
        lblError_AChangePin_newR.setPreferredSize(new java.awt.Dimension(70, 14));
        pn_Menu_ChangePIN_Admin.add(lblError_AChangePin_newR);

        lblError_ChangePin.setForeground(new java.awt.Color(255, 0, 0));
        lblError_ChangePin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_ChangePin.setPreferredSize(new java.awt.Dimension(350, 14));
        pn_Menu_ChangePIN_Admin.add(lblError_ChangePin);

        btnChangePIN_Admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/check (3).png"))); // NOI18N
        btnChangePIN_Admin.setText("Change");
        btnChangePIN_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChangePIN_AdminMouseClicked(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(btnChangePIN_Admin);

        btnClear_ChangePIN_Admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnClear_ChangePIN_Admin.setText("Clear");
        btnClear_ChangePIN_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClear_ChangePIN_AdminMouseClicked(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(btnClear_ChangePIN_Admin);

        btnCancel_ChangePIN_Admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancel.png"))); // NOI18N
        btnCancel_ChangePIN_Admin.setText("Cancel");
        btnCancel_ChangePIN_Admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel_ChangePIN_AdminMouseClicked(evt);
            }
        });
        pn_Menu_ChangePIN_Admin.add(btnCancel_ChangePIN_Admin);

        jPanel32.add(pn_Menu_ChangePIN_Admin);

        pnChange_PinADMIN.add(jPanel32);

        pnFarther.add(pnChange_PinADMIN, "ChangePINADMIN");

        pnChange_PinUSER.setBackground(new java.awt.Color(0, 153, 204));
        pnChange_PinUSER.setMaximumSize(new java.awt.Dimension(1000, 722));
        pnChange_PinUSER.setMinimumSize(new java.awt.Dimension(1000, 722));
        pnChange_PinUSER.setPreferredSize(new java.awt.Dimension(1000, 722));

        pnLogo11.setBackground(new java.awt.Color(255, 255, 255));
        pnLogo11.setMaximumSize(new java.awt.Dimension(810, 110));

        jLabel75.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo/logoChangePin.png"))); // NOI18N
        pnLogo11.add(jLabel75);

        pnChange_PinUSER.add(pnLogo11);

        jPanel33.setBackground(new java.awt.Color(0, 153, 204));
        jPanel33.setMaximumSize(new java.awt.Dimension(550, 712));
        jPanel33.setMinimumSize(new java.awt.Dimension(550, 712));
        jPanel33.setPreferredSize(new java.awt.Dimension(550, 712));

        pnMenu_ChangePIN.setBackground(new java.awt.Color(0, 153, 204));
        pnMenu_ChangePIN.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Change PIN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 204))); // NOI18N
        pnMenu_ChangePIN.setMaximumSize(new java.awt.Dimension(410, 520));
        pnMenu_ChangePIN.setMinimumSize(new java.awt.Dimension(410, 520));
        pnMenu_ChangePIN.setPreferredSize(new java.awt.Dimension(410, 690));

        jPanel27.setBackground(new java.awt.Color(255, 255, 204));
        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel27.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel27.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime9.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime9.setForeground(new java.awt.Color(255, 0, 0));
        lblTime9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime9.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel27.add(lblTime9);

        pnMenu_ChangePIN.add(jPanel27);

        lblAmount_Transfer_Display2.setFont(new java.awt.Font("Tahoma 14", 0, 12));
        lblAmount_Transfer_Display2.setForeground(new java.awt.Color(255, 0, 0));
        lblAmount_Transfer_Display2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmount_Transfer_Display2.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_ChangePIN.add(lblAmount_Transfer_Display2);

        lblTransfer_Session2.setForeground(new java.awt.Color(255, 0, 0));
        lblTransfer_Session2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTransfer_Session2.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_ChangePIN.add(lblTransfer_Session2);

        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setPreferredSize(new java.awt.Dimension(370, 14));
        pnMenu_ChangePIN.add(jLabel59);

        jLabel62.setForeground(new java.awt.Color(0, 0, 255));
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel62.setText("Old PIN:");
        jLabel62.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_ChangePIN.add(jLabel62);

        txtChange_PIN_UOld.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChange_PIN_UOld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtChange_PIN_UOldMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(txtChange_PIN_UOld);

        lblError_changePin_UOLD.setForeground(new java.awt.Color(255, 0, 0));
        lblError_changePin_UOLD.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_ChangePIN.add(lblError_changePin_UOLD);

        jLabel63.setForeground(new java.awt.Color(0, 0, 255));
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel63.setText("New PIN:");
        jLabel63.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_ChangePIN.add(jLabel63);

        txtChange_PIN_UNew.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChange_PIN_UNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtChange_PIN_UNewMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(txtChange_PIN_UNew);

        lblError_changePin_UNew.setForeground(new java.awt.Color(255, 0, 0));
        lblError_changePin_UNew.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_ChangePIN.add(lblError_changePin_UNew);

        jLabel64.setForeground(new java.awt.Color(0, 0, 255));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel64.setText("New PIN again:");
        jLabel64.setPreferredSize(new java.awt.Dimension(100, 14));
        pnMenu_ChangePIN.add(jLabel64);

        txtChange_PIN_UNewR.setPreferredSize(new java.awt.Dimension(200, 20));
        txtChange_PIN_UNewR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtChange_PIN_UNewRMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(txtChange_PIN_UNewR);

        lblError_changePin_UNewR.setForeground(new java.awt.Color(255, 0, 0));
        lblError_changePin_UNewR.setPreferredSize(new java.awt.Dimension(70, 14));
        pnMenu_ChangePIN.add(lblError_changePin_UNewR);

        lblError_ChangePinU.setForeground(new java.awt.Color(255, 0, 0));
        lblError_ChangePinU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_ChangePinU.setPreferredSize(new java.awt.Dimension(350, 14));
        pnMenu_ChangePIN.add(lblError_ChangePinU);

        btnChangePIN_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/check (3).png"))); // NOI18N
        btnChangePIN_User.setText("Change");
        btnChangePIN_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChangePIN_UserMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(btnChangePIN_User);

        btnClear_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnClear.png"))); // NOI18N
        btnClear_User.setText("Clear");
        btnClear_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClear_UserMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(btnClear_User);

        btnCancel_ChangePIN_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnCancel.png"))); // NOI18N
        btnCancel_ChangePIN_User.setText("Cancel");
        btnCancel_ChangePIN_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel_ChangePIN_UserMouseClicked(evt);
            }
        });
        pnMenu_ChangePIN.add(btnCancel_ChangePIN_User);

        pnK4.setBackground(new java.awt.Color(0, 153, 204));
        pnK4.setMaximumSize(new java.awt.Dimension(200, 290));
        pnK4.setMinimumSize(new java.awt.Dimension(200, 290));
        pnK4.setPreferredSize(new java.awt.Dimension(200, 290));

        btn40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.GIF"))); // NOI18N
        btn40.setPreferredSize(new java.awt.Dimension(50, 50));
        btn40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn40MouseClicked(evt);
            }
        });
        pnK4.add(btn40);

        btn41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.GIF"))); // NOI18N
        btn41.setPreferredSize(new java.awt.Dimension(50, 50));
        btn41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn41MouseClicked(evt);
            }
        });
        pnK4.add(btn41);

        btn42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.GIF"))); // NOI18N
        btn42.setPreferredSize(new java.awt.Dimension(50, 50));
        btn42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn42MouseClicked(evt);
            }
        });
        pnK4.add(btn42);

        btn43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.GIF"))); // NOI18N
        btn43.setPreferredSize(new java.awt.Dimension(50, 50));
        btn43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn43MouseClicked(evt);
            }
        });
        pnK4.add(btn43);

        btn44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.GIF"))); // NOI18N
        btn44.setPreferredSize(new java.awt.Dimension(50, 50));
        btn44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn44MouseClicked(evt);
            }
        });
        pnK4.add(btn44);

        btn45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.GIF"))); // NOI18N
        btn45.setPreferredSize(new java.awt.Dimension(50, 50));
        btn45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn45MouseClicked(evt);
            }
        });
        pnK4.add(btn45);

        btn46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.GIF"))); // NOI18N
        btn46.setPreferredSize(new java.awt.Dimension(50, 50));
        btn46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn46MouseClicked(evt);
            }
        });
        pnK4.add(btn46);

        btn47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.GIF"))); // NOI18N
        btn47.setPreferredSize(new java.awt.Dimension(50, 50));
        btn47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn47MouseClicked(evt);
            }
        });
        pnK4.add(btn47);

        btn48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.GIF"))); // NOI18N
        btn48.setPreferredSize(new java.awt.Dimension(50, 50));
        btn48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn48MouseClicked(evt);
            }
        });
        pnK4.add(btn48);

        btnBack4.setForeground(new java.awt.Color(255, 0, 0));
        btnBack4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBackspace.png"))); // NOI18N
        btnBack4.setPreferredSize(new java.awt.Dimension(105, 50));
        btnBack4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBack4MouseClicked(evt);
            }
        });
        pnK4.add(btnBack4);

        btn49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/0.png"))); // NOI18N
        btn49.setPreferredSize(new java.awt.Dimension(50, 50));
        btn49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn49MouseClicked(evt);
            }
        });
        pnK4.add(btn49);

        pnMenu_ChangePIN.add(pnK4);

        jPanel33.add(pnMenu_ChangePIN);

        pnChange_PinUSER.add(jPanel33);

        pnFarther.add(pnChange_PinUSER, "ChangePINUSER");

        pnBlance_User.setBackground(new java.awt.Color(0, 153, 204));

        pn_Menu_Blance.setBackground(new java.awt.Color(255, 255, 255));
        pn_Menu_Blance.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Blance", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 204))); // NOI18N
        pn_Menu_Blance.setMaximumSize(new java.awt.Dimension(410, 520));
        pn_Menu_Blance.setMinimumSize(new java.awt.Dimension(410, 520));
        pn_Menu_Blance.setPreferredSize(new java.awt.Dimension(700, 690));

        jPanel29.setBackground(new java.awt.Color(255, 255, 204));
        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel29.setMaximumSize(new java.awt.Dimension(390, 70));
        jPanel29.setPreferredSize(new java.awt.Dimension(390, 100));

        lblTime10.setFont(new java.awt.Font("Tahoma", 0, 24));
        lblTime10.setForeground(new java.awt.Color(255, 0, 0));
        lblTime10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime10.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanel29.add(lblTime10);

        pn_Menu_Blance.add(jPanel29);

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel65.setText("Information of your Account :");
        jLabel65.setPreferredSize(new java.awt.Dimension(370, 20));
        pn_Menu_Blance.add(jLabel65);

        jLabel66.setPreferredSize(new java.awt.Dimension(110, 14));
        pn_Menu_Blance.add(jLabel66);

        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel67.setText("Fullname:");
        jLabel67.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel67);

        lblFullName.setFont(new java.awt.Font("Calibri", 0, 11));
        lblFullName.setForeground(new java.awt.Color(0, 0, 255));
        lblFullName.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblFullName);

        jLabel68.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel68);

        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel69.setText("Gender:");
        jLabel69.setPreferredSize(new java.awt.Dimension(200, 14));
        jLabel69.setRequestFocusEnabled(false);
        pn_Menu_Blance.add(jLabel69);

        lbl_Blance_Gender.setFont(new java.awt.Font("Calibri", 0, 11));
        lbl_Blance_Gender.setForeground(new java.awt.Color(0, 0, 255));
        lbl_Blance_Gender.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lbl_Blance_Gender);

        lblBlance_Address1.setFont(new java.awt.Font("Calibri", 0, 11));
        lblBlance_Address1.setForeground(new java.awt.Color(255, 0, 0));
        lblBlance_Address1.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblBlance_Address1);

        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel70.setText("Address:");
        jLabel70.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel70);

        lblBlance_Address.setFont(new java.awt.Font("Calibri", 0, 11));
        lblBlance_Address.setForeground(new java.awt.Color(0, 0, 255));
        lblBlance_Address.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblBlance_Address);

        jLabel78.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel78);

        jLabel77.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel77.setText("Balance enquiry:");
        jLabel77.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel77);

        lblBlance_Blance.setFont(new java.awt.Font("Calibri", 0, 11));
        lblBlance_Blance.setForeground(new java.awt.Color(0, 0, 255));
        lblBlance_Blance.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblBlance_Blance);

        jLabel80.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(jLabel80);

        lblBlance_Transaction1.setFont(new java.awt.Font("Calibri", 0, 11));
        lblBlance_Transaction1.setForeground(new java.awt.Color(102, 102, 0));
        lblBlance_Transaction1.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblBlance_Transaction1);

        lblBlance_Address2.setFont(new java.awt.Font("Calibri", 0, 11));
        lblBlance_Address2.setForeground(new java.awt.Color(255, 0, 0));
        lblBlance_Address2.setPreferredSize(new java.awt.Dimension(200, 14));
        pn_Menu_Blance.add(lblBlance_Address2);

        lblError_ChangePin1.setForeground(new java.awt.Color(255, 0, 0));
        lblError_ChangePin1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError_ChangePin1.setPreferredSize(new java.awt.Dimension(400, 14));
        pn_Menu_Blance.add(lblError_ChangePin1);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "History Transactions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel19.setPreferredSize(new java.awt.Dimension(600, 350));

        jLabel79.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel79.setText("Type:");
        jPanel19.add(jLabel79);

        cmb_History_User.setPreferredSize(new java.awt.Dimension(150, 20));
        cmb_History_User.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_History_UserItemStateChanged(evt);
            }
        });
        jPanel19.add(cmb_History_User);

        jLabel76.setText("Filter by :");
        jPanel19.add(jLabel76);

        cmbFilter_User.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Today", "Ten days ago", "Last month" }));
        cmbFilter_User.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFilter_UserItemStateChanged(evt);
            }
        });
        jPanel19.add(cmbFilter_User);

        jScrollPane4.setMaximumSize(new java.awt.Dimension(600, 300));
        jScrollPane4.setMinimumSize(new java.awt.Dimension(600, 300));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(600, 300));

        tblBalance_History.setBackground(new java.awt.Color(255, 255, 204));
        tblBalance_History.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBalance_History.setMaximumSize(new java.awt.Dimension(600, 64));
        tblBalance_History.setMinimumSize(new java.awt.Dimension(600, 64));
        tblBalance_History.setPreferredSize(new java.awt.Dimension(600, 300));
        jScrollPane4.setViewportView(tblBalance_History);

        jPanel19.add(jScrollPane4);

        pn_Menu_Blance.add(jPanel19);

        btnCancel_Blance_User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/btnBack.png"))); // NOI18N
        btnCancel_Blance_User.setText("Back");
        btnCancel_Blance_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel_Blance_UserMouseClicked(evt);
            }
        });
        pn_Menu_Blance.add(btnCancel_Blance_User);

        pnBlance_User.add(pn_Menu_Blance);

        pnFarther.add(pnBlance_User, "Blance");

        getContentPane().add(pnFarther, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void time() {
        the = new SimpleDateFormat("EE");
        years = new SimpleDateFormat("yyyy");
        months = new SimpleDateFormat("MM");
        days = new SimpleDateFormat("dd");
        hours = new SimpleDateFormat("HH");
        minutes = new SimpleDateFormat("mm");
        seconds = new SimpleDateFormat("ss");
//parse ngay thang sang dinh dang va chuyen thanh int.
        th = the.format(todayD.getTime());
        ye = Integer.parseInt(years.format(todayD.getTime()));
        mo = Integer.parseInt(months.format(todayD.getTime()));
        da = Integer.parseInt(days.format(todayD.getTime()));
        ho = Integer.parseInt(hours.format(todayD.getTime()));
        mi = Integer.parseInt(minutes.format(todayD.getTime()));
        se = Integer.parseInt(seconds.format(todayD.getTime()));
        ActionListener taskPerformer = new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                se++;
                if (se == 60) {
                    se = 0;
                    mi++;
                }
                if (mi == 60) {
                    se = 0;
                    mi = 0;
                    ho++;
                }
                if (ho == 24) {
                    se = 0;
                    mi = 0;
                    ho = 0;
                    da++;
                }
                if (mo == 1 || mo == 3 || mo == 5 || mo == 7 || mo == 8 || mo == 10 || mo == 12) {
                    if (da == 31) {
                        se = 0;
                        mi = 0;
                        ho = 0;
                        da = 1;
                        mo++;
                    }
                } else if (mo == 2 && (ye % 4) == 0) {
                    if (da == 29) {
                        se = 0;
                        mi = 0;
                        ho = 0;
                        da = 1;
                        mo++;
                    }
                } else if (mo == 2 && (ye % 4) != 0) {
                    if (da == 28) {
                        se = 0;
                        mi = 0;
                        ho = 0;
                        da = 1;
                        mo++;
                    }
                } else if (mo == 4 || mo == 6 || mo == 9 || mo == 11) {
                    if (da == 30) {
                        se = 0;
                        mi = 0;
                        ho = 0;
                        da = 1;
                        mo++;
                    }
                }
                if (mo == 12) {
                    se = 0;
                    mi = 0;
                    ho = 0;
                    da = 1;
                    mo = 1;
                    ye++;
                }
                lblTime5.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime1.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime2.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime3.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime4.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime6.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime7.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime8.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime9.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime10.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime11.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime12.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
                lblTime13.setText(th + " : " + da + "-" + mo + "-" + ye + "  " + ho + " : " + mi + " : " + se + " ");
            }
        };
        new Timer(delay, taskPerformer).start();
    }
    private void btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn1MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "1");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "1");
        } else {
            txtAccount.setText(txtAccount.getText() + "");
        }
}//GEN-LAST:event_btn1MouseClicked

    private void btn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "2");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "2");
        }
}//GEN-LAST:event_btn2MouseClicked

    private void btn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn3MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "3");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "3");
        }
}//GEN-LAST:event_btn3MouseClicked

    private void btn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn4MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "4");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "4");
        }
}//GEN-LAST:event_btn4MouseClicked

    private void btn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn5MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "5");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "5");
        }
}//GEN-LAST:event_btn5MouseClicked

    private void btn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn6MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "6");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "6");
        }
}//GEN-LAST:event_btn6MouseClicked

    private void btn7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn7MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "7");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "7");
        }
}//GEN-LAST:event_btn7MouseClicked

    private void btn8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn8MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "8");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "8");
        }
}//GEN-LAST:event_btn8MouseClicked

    private void btn9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn9MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "9");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "9");
        }
}//GEN-LAST:event_btn9MouseClicked

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        if (txtAccount.isEnabled() == true) {
            // TODO add your handling code here:
            if (txtAccount.getText().length() != 0) {
                try {
                    String c = txtAccount.getText(0, txtAccount.getText().length() - 1);
                    txtAccount.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (txtPIN.isEnabled() == true) {
            // TODO add your handling code here:
            if (txtPIN.getText().length() != 0) {
                try {
                    String c = txtPIN.getText(0, txtPIN.getText().length() - 1);
                    txtPIN.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            txtAccount.setText(txtAccount.getText() + "");
        }
}//GEN-LAST:event_btnBackMouseClicked

    private void btn0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn0MouseClicked
        // TODO add your handling code here:
        if (txtAccount.isEnabled() == true) {
            txtAccount.setText(txtAccount.getText() + "" + "0");
        } else if (txtPIN.isEnabled() == true) {
            txtPIN.setText(txtPIN.getText() + "" + "0");
        }
}//GEN-LAST:event_btn0MouseClicked

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        // TODO add your handling code here:
        connec = new connecDB();
        connec.connecDB();
        sta = connec.sta;
        if (txtAccount.getText().length() < 9) {
            lblError_Cus_Login.setText("Account is not null or Account length can't smaller than 9");
        } else if (txtPIN.getText().length() < 4) {
            lblError_Cus_Login.setText("PIN is not null or Pin length can't smaller than 4");
        } else {
            try {
                lblError_Cus_Login.setText("");
                String strAccount = txtAccount.getText();
                String strPin = txtPIN.getText();
                re = sta.executeQuery("select * from Account where Account_Number=" + strAccount + " and PIN_Code=" + strPin + "");
                if (re.next()) {
                    Account_Number = re.getString("Account_Number");
                    String strStatus = re.getString("Account_Status");
                    //check
                    if (strStatus.equals("DISABLE")) {
                        lblError_Cus_Login.setText("The account is DISABLE");
                    } else {
                        if (re.getString("Account_Type").equals("Desposit")) {
                            btnCus_Transfer.setVisible(false);
                            card.show(pnFarther, "CusMenu");
                            lblError_Cus_Login.setText("");
                            lblCus_Name.setText(re.getString("Account_Gender") + " . " + re.getString("Account_FullName"));
                            lblCus_Age.setText(" " + re.getInt("Account_Age"));
                            lblCus_Phone.setText(" " + re.getInt("Account_Phone"));
                            lblCus_Address.setText(" " + re.getString("Account_Address"));
                        } else if (re.getString("Account_Type").equals("Transfer")) {
                            btnCus_Withdraw.setVisible(false);
                            card.show(pnFarther, "CusMenu");
                            lblError_Cus_Login.setText("");
                            lblCus_Name.setText(re.getString("Account_Gender") + " . " + re.getString("Account_FullName"));
                            lblCus_Age.setText(" " + re.getInt("Account_Age"));
                            lblCus_Phone.setText(" " + re.getInt("Account_Phone"));
                            lblCus_Address.setText(" " + re.getString("Account_Address"));
                        } else {
                            card.show(pnFarther, "CusMenu");
                            btnCus_Transfer.setVisible(true);
                            btnCus_Withdraw.setVisible(true);
                            lblError_Cus_Login.setText("");
                            lblCus_Name.setText(re.getString("Account_Gender") + " . " + re.getString("Account_FullName"));
                            lblCus_Age.setText(" " + re.getInt("Account_Age"));
                            lblCus_Phone.setText(" " + re.getInt("Account_Phone"));
                            lblCus_Address.setText(" " + re.getString("Account_Address"));
                        }
                    }

                } else {
                    lblError_Cus_Login.setText("The Account isn't exit or PIN isn't true");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnLoginMouseClicked

    private void btnCus_WithdrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_WithdrawMouseClicked
        try {
            // TODO add your handling code here:
            card.show(pnFarther, "Withdraw");
            re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
            if (re.next()) {
                lblAmount_Withdraw_Display.setText(re.getString("Account_Amount"));
                if (re.getInt("Account_Amount") < 10) {
                    btnWithdrawn_Amount.setEnabled(false);
                    lblAlert.setText("You can not Withdraw because total amount of you is 0 !");
                }
            }
            re = sta.executeQuery("SELECT COUNT(Withdraw_Amount) FROM Withdraw_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=1");
            if (re.next()) {
                lblWithdraw_Session.setText(re.getString(1));
                if (re.getInt(1) >= 5) {
                    btnWithdrawn_Amount.setEnabled(false);
                    lblAlert.setText("You cann't Withdraw because total amount of you is 0 or you sent 5/5!");
                }
            } else {
                lblWithdraw_Session.setText("0");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCus_WithdrawMouseClicked

    private void btnCus_TransferMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_TransferMouseClicked
        try {
            // TODO add your handling code here:
            card.show(pnFarther, "Transfer");
            re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
            if (re.next()) {
                lblAmount_Transfer_Display.setText(re.getString("Account_Amount"));
                if (re.getInt("Account_Amount") < 1) {
                    btnTransfer_ToAccount.setEnabled(false);
                    lblAlert.setText("You can not Transfer money because total amount of you is 0 !");
                }
            }
            re = sta.executeQuery("SELECT COUNT(Transfer_Amount) FROM Transfer_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=1");
            if (re.next()) {
                lblTransfer_Session.setText(re.getString(1));
                if (re.getInt(1) >= 5) {
                    btnTransfer_ToAccount.setEnabled(false);
                    lblError_Transfer.setText("You cann't Transfer money because total amount of you is 0 or you sent 5/5!");
                }
            } else {
                lblTransfer_Session.setText("0");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnCus_TransferMouseClicked

    private void btnCus_BlanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_BlanceMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "Blance");
        try {
            // TODO add your handling code here:
            card.show(pnFarther, "Blance");
            String strSQL = "Select * from Account where Account_Number = " + Account_Number + "";
            re = sta.executeQuery(strSQL);
            if (re.next()) {
                lblFullName.setText(re.getString("Account_FullName"));
                lbl_Blance_Gender.setText(re.getString("Account_Gender"));
                lblBlance_Address.setText(re.getString("Account_Address"));
                lblBlance_Blance.setText(re.getString("Account_Amount") +" ($)");
                if (re.getString("Account_Type").equals("All")) {
                    cmb_History_User.addItem("Desposit money");
                    cmb_History_User.addItem("Withdraw money");
                    cmb_History_User.addItem("Transfer money");
                } else if (re.getString("Account_Type").equals("Desposit")) {
                    cmb_History_User.addItem("Desposit money");
                    cmb_History_User.addItem("Withdraw money");
                } else if (re.getString("Account_Type").equals("Transfer")) {
                    cmb_History_User.addItem("Transfer money");
                    cmb_History_User.addItem("Desposit money");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCus_BlanceMouseClicked

    private void btnCus_ChangePinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_ChangePinMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "ChangePINUSER");
        txtChange_PIN_UOld.setEnabled(false);
        txtChange_PIN_UNew.setEnabled(false);
        txtChange_PIN_UNewR.setEnabled(false);
        txtChange_PIN_UOld.setText("");
        txtChange_PIN_UNew.setText("");
        txtChange_PIN_UNewR.setText("");
    }//GEN-LAST:event_btnCus_ChangePinMouseClicked

    private void btnCus_ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_ExitMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "Login");
        txtAccount.setText("");
        txtPIN.setText("");
        txtAccount.setEnabled(false);
        txtPIN.setEnabled(false);
    }//GEN-LAST:event_btnCus_ExitMouseClicked

    private void btnAdm_ManagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_ManagementMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "Management");
        Load_Desposit();
        LoadAccountResetPIN();
        LoadUser();
    }//GEN-LAST:event_btnAdm_ManagementMouseClicked

    private void btnAdm_BankMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_BankMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            //     card.show(pnFarther, "Blance_Bank");
            String strTotal = "select((select sum( Account_Amount) from Account where Account_Type ='Desposit') + (select Bank_Amount from Bank)) as 'Total'";
            re = sta.executeQuery(strTotal);
            if (re.next()) {
                JOptionPane.showMessageDialog(pnFarther, "A bank have: " + re.getString("Total") + " ($)");
            }
//            String strTotalDeposit = "select sum (Account_Amount) as 'Total_Deposit' from Account where Account_Type ='Desposit'";
//            re = sta.executeQuery(strTotalDeposit);
//            if(re.next()){
//            txtTotal_AmountDesposit.setText(re.getString("Total_Deposit"));
//            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAdm_BankMouseClicked

    private void btnAdm_ChangePinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_ChangePinMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "ChangePINADMIN");
        txtChangePin_Old_Admin.setEnabled(true);
        txtChangePin_New_Admin.setEnabled(true);
        txtChangePin_NewR_Admin.setEnabled(true);
    }//GEN-LAST:event_btnAdm_ChangePinMouseClicked

    private void btnAd_ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAd_ExitMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "Login");
        txtAccount_Admin.setText("");
        txtPIN_Admin.setText("");
    }//GEN-LAST:event_btnAd_ExitMouseClicked

    private void btnAdm_CreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_CreateMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CreateAcc");
}//GEN-LAST:event_btnAdm_CreateMouseClicked

    private void btnDesposit_AmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesposit_AmountMouseClicked
        // TODO add your handling code here:
        int aDeposite = new Integer(txtDeposit_Amount.getText());
        if (aDeposite <= 0 || aDeposite > 25000) {
            JOptionPane.showMessageDialog(pnFarther, "The amount Desposit is not smaller than 0$ or bigger than 25000$");
        } else {
            int reNum = JOptionPane.showConfirmDialog(pnFarther, "Do you want to deposit : " + aDeposite + " ($) to account !");
            if (reNum == 0) {
                try {
                    //you choose is 'yes'
                    sta.executeUpdate("insert into Desposit_Money(Account_Number,Desposit_Amount)" + "values(" + Account_Number + "," + aDeposite + ")");
                    re = sta.executeQuery("SELECT COUNT(Desposit_Amount) FROM Desposit_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=1");
                    di = new Display();
                    di.setVisible(true);
                    String strDisplay = "At " + lblTime.getText() + "\nYou sent to bank " + aDeposite + " ($) \nPlease waiting for feedback of system \nThank !";
                    di.setDisplay(strDisplay);
                    if (re.next()) {
                        lblDeposit_Session.setText(re.getString(1));
                        txtDeposit_Amount.setText("");
                        if (re.getInt(1) >= 5) {
                            btnDesposit_Amount.setEnabled(false);
                            lblError_Deposit.setText("You cann't Desposit because  you sent 5/5!");
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(pnFarther, "The desposit failed !");
            }
        }
}//GEN-LAST:event_btnDesposit_AmountMouseClicked

    private void btnDesposit_ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesposit_ClearMouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText("");
        lblError_Deposit.setText("");
}//GEN-LAST:event_btnDesposit_ClearMouseClicked

    private void btnDesposit_CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesposit_CancelMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CusMenu");
        btnDesposit_Amount.setEnabled(true);
        lblError_Deposit.setText("");
}//GEN-LAST:event_btnDesposit_CancelMouseClicked

    private void btn20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn20MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "1");
}//GEN-LAST:event_btn20MouseClicked

    private void btn21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn21MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "2");
}//GEN-LAST:event_btn21MouseClicked

    private void btn22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn22MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "3");
}//GEN-LAST:event_btn22MouseClicked

    private void btn23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn23MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "4");
}//GEN-LAST:event_btn23MouseClicked

    private void btn24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn24MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "5");
}//GEN-LAST:event_btn24MouseClicked

    private void btn25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn25MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "6");
}//GEN-LAST:event_btn25MouseClicked

    private void btn26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn26MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "7");
}//GEN-LAST:event_btn26MouseClicked

    private void btn27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn27MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "8");
}//GEN-LAST:event_btn27MouseClicked

    private void btn28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn28MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "9");
}//GEN-LAST:event_btn28MouseClicked

    private void btnBack2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBack2MouseClicked
        // TODO add your handling code here:
        if (txtDeposit_Amount.getText().length() != 0) {
            try {
                String c = txtDeposit_Amount.getText(0, txtDeposit_Amount.getText().length() - 1);
                txtDeposit_Amount.setText(c);
            } catch (BadLocationException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnBack2MouseClicked

    private void btn29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn29MouseClicked
        // TODO add your handling code here:
        txtDeposit_Amount.setText(txtDeposit_Amount.getText() + "" + "0");
}//GEN-LAST:event_btn29MouseClicked

    private void btnWithdrawn_AmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnWithdrawn_AmountMouseClicked
        if (txtWithdraw_Amount.getText().length() == 0) {
            lblError_Withdraw.setText("The Amount is can't empty");
        } else {
            int wi = Integer.parseInt(txtWithdraw_Amount.getText());
            if (wi >= 50 && wi <= 25000) {
                try {
                    int amo;
                    re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
                    if (re.next()) {
                        amo = re.getInt("Account_Amount");
                        if (amo < wi) {
                            lblError_Withdraw.setText("You can't withdraw money greater than amount of you !");
                        } else {
                            int i = JOptionPane.showConfirmDialog(pnFarther, "Do you want to withdraw " + wi + " from account ?");
                            if (i == 0) {
                                try {
                                    sta.executeUpdate("insert into WithDraw_Money (Account_Number,Withdraw_Amount) values (" + Account_Number + "," + wi + ")");
                                    sta.executeUpdate("Update Account set Account_Amount =" + "((Select Account_Amount from Account where Account_Number = (select top 1 Withdraw_Money.Account_Number from Withdraw_Money order by Withdraw_Session DESC))" + "-" + wi + ") where Account_Number = (Select top 1 Withdraw_Money.Account_Number from Withdraw_Money order by Withdraw_Session DESC)");
                                    sta.executeUpdate("Update Bank set Bank_Amount=" + "(select Bank_Amount from Bank)+" + wi);
                                    re = sta.executeQuery("select * from Account where Account_Number = " + Account_Number + "");
                                    if (re.next()) {
                                        lblAmount_Withdraw_Display.setText(re.getString("Account_Amount"));
                                    }
                                    di = new Display();
                                    di.setVisible(true);
                                    String strDisplay = "At " + lblTime.getText() + "\nYou withdrew " + wi + " ($) \nThank !";
                                    di.setDisplay(strDisplay);
                                    txtWithdraw_Amount.setText("");
                                    lblError_Withdraw.setText("");
                                    txtWithdraw_Amount.setText("");
                                    re = sta.executeQuery("SELECT COUNT(Withdraw_Amount) FROM Withdraw_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=1");
                                    if (re.next()) {
                                        lblWithdraw_Session.setText(re.getString(1));
                                        if (re.getInt(1) >= 5) {
                                            btnWithdrawn_Amount.setEnabled(false);
                                        } else {
                                            btnWithdrawn_Amount.setEnabled(true);
                                        }
                                    } else {
                                        lblWithdraw_Session.setText("0");
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } else {
                                JOptionPane.showMessageDialog(pnFarther, "Withdraw Failed");
                            }
                        }
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                lblError_Withdraw.setText("The Amount is can't smaller than 50 $ or greater than 25000$");
            }
        }
}//GEN-LAST:event_btnWithdrawn_AmountMouseClicked

    private void btnClear_WithdrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClear_WithdrawMouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText("");
}//GEN-LAST:event_btnClear_WithdrawMouseClicked

    private void btnCancel_WithdrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel_WithdrawMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CusMenu");
        btnWithdrawn_Amount.setEnabled(true);
        txtWithdraw_Amount.setText("");
        lblError_Withdraw.setText("");
        lblAlert.setText("");
}//GEN-LAST:event_btnCancel_WithdrawMouseClicked

    private void btn30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn30MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "1");
    }//GEN-LAST:event_btn30MouseClicked

    private void btn31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn31MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "2");
    }//GEN-LAST:event_btn31MouseClicked

    private void btn32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn32MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "3");
    }//GEN-LAST:event_btn32MouseClicked

    private void btn33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn33MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "4");
    }//GEN-LAST:event_btn33MouseClicked

    private void btn34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn34MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "5");
    }//GEN-LAST:event_btn34MouseClicked

    private void btn35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn35MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "6");
    }//GEN-LAST:event_btn35MouseClicked

    private void btn36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn36MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "7");
    }//GEN-LAST:event_btn36MouseClicked

    private void btn37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn37MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "8");
    }//GEN-LAST:event_btn37MouseClicked

    private void btn38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn38MouseClicked
        // TODO add your handling code here:
        txtWithdraw_Amount.setText(txtWithdraw_Amount.getText() + "" + "9");
    }//GEN-LAST:event_btn38MouseClicked

    private void btnBack3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBack3MouseClicked
        // TODO add your handling code here:
        if (txtWithdraw_Amount.getText().length() != 0) {
            try {
                String c = txtWithdraw_Amount.getText(0, txtWithdraw_Amount.getText().length() - 1);
                txtWithdraw_Amount.setText(c);
            } catch (BadLocationException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBack3MouseClicked

    private void btn39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn39MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn39MouseClicked

    private void txtTransfer_AmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTransfer_AmountMouseClicked
        // TODO add your handling code here:
        txtTransfer_Amount.setEnabled(true);
        txtTransfer_ToAccountNumber.setEnabled(false);
}//GEN-LAST:event_txtTransfer_AmountMouseClicked

    private void txtTransfer_AmountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTransfer_AmountMouseExited
        // TODO add your handling code here:
}//GEN-LAST:event_txtTransfer_AmountMouseExited

    private void txtTransfer_ToAccountNumberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTransfer_ToAccountNumberMouseClicked
        // TODO add your handling code here:
        txtTransfer_Amount.setEnabled(false);
        txtTransfer_ToAccountNumber.setEnabled(true);
}//GEN-LAST:event_txtTransfer_ToAccountNumberMouseClicked

    private void txtTransfer_ToAccountNumberMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTransfer_ToAccountNumberMouseExited
        // TODO add your handling code here:
}//GEN-LAST:event_txtTransfer_ToAccountNumberMouseExited

    private void btnTransfer_ToAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransfer_ToAccountMouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.getText().length() == 0 || txtTransfer_ToAccountNumber.getText().length() == 0) {
            JOptionPane.showMessageDialog(pnFarther, "A fields Amount or Account number is empty ");
        } else {
            try {
                re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
                if (re.next()) {
                    int tAmount = Integer.parseInt(txtTransfer_Amount.getText());
                    if (tAmount < 50 || tAmount > 25000) {
                        lblError_Transfer_Amount.setForeground(Color.red);
                        lblError_Transfer_Amount.setText("Invalid");
                    } else if (txtTransfer_ToAccountNumber.getText().length() != 9) {
                        lblError_Transfer_To.setForeground(Color.red);
                        lblError_Transfer_To.setText("Invalid");
                    } else if (tAmount > (re.getInt("Account_Amount"))) {
                        JOptionPane.showMessageDialog(pnFarther, "You can not transfer money because the amount you want to transfer is greater than total amount");
                    } else if (txtTransfer_ToAccountNumber.getText().equals(Account_Number)) {
                        JOptionPane.showMessageDialog(pnFarther, "You can not transfer for yourself!");
                    } else {
                        int choose = JOptionPane.showConfirmDialog(pnFarther, "Do you want to transfer money to account : " + txtTransfer_ToAccountNumber.getText());
                        if (choose == 0) {
                            try {
                                lblError_Transfer_Amount.setText("");
                                sta.executeUpdate("insert into Transfer_Money(Account_Number, Transfer_Amount,Transfer_To_Account)" + "values(" + Account_Number + "," + txtTransfer_Amount.getText() + "," + txtTransfer_ToAccountNumber.getText() + ")");
                                sta.executeUpdate("update Account set Account_Amount = (" + "(select Account_Amount from Account where Account_Number=(select top 1 Account_Number from Transfer_Money order by Transfer_Session DESC))" + "-" + "(select top 1 Transfer_Amount from Transfer_Money order by Transfer_Session DESC))" + "where Account_Number = (select top 1 Account_Number from Transfer_Money order by Transfer_Session DESC)");
                                sta.executeUpdate("update Account set Account_Amount = (" + "(select Account_Amount from Account where Account_Number=(select top 1 Transfer_To_Account from Transfer_Money order by Transfer_Session DESC))" + "+" + "(select top 1 Transfer_Amount from Transfer_Money order by Transfer_Session DESC))" + "where Account_Number = (select top 1 Transfer_To_Account from Transfer_Money order by Transfer_Session DESC)");
                                di = new Display();
                                di.setVisible(true);
                                String strDisplay = "At " + lblTime.getText() + "\nYou has transferred " + tAmount + " ($)\nTo :" + txtTransfer_ToAccountNumber.getText() + " \nThank !";
                                di.setDisplay(strDisplay);
                                txtTransfer_Amount.setText("");
                                txtTransfer_ToAccountNumber.setText("");
                                re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
                                if (re.next()) {
                                    lblAmount_Transfer_Display.setText(re.getString("Account_Amount"));
                                    if (re.getInt("Account_Amount") < 1) {
                                        btnTransfer_ToAccount.setEnabled(false);
                                        lblAlert.setText("You can not Transfer money because total amount of you is 0 !");
                                    }
                                }
                                re = sta.executeQuery("SELECT COUNT(Transfer_Amount) FROM Transfer_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=1");
                                if (re.next()) {
                                    lblTransfer_Session.setText(re.getString(1));
                                    if (re.getInt(1) >= 5) {
                                        btnTransfer_ToAccount.setEnabled(false);
                                        lblError_Transfer.setText("You cann't Transfer money because total amount of you is 0 or you sent 5/5!");
                                    }
                                } else {
                                    lblTransfer_Session.setText("0");
                                }
                            } catch (SQLException ex) {
                                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            JOptionPane.showMessageDialog(pnFarther, "Transfer Failed!!");
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnTransfer_ToAccountMouseClicked

    private void btnClear_Withdraw1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClear_Withdraw1MouseClicked
        // TODO add your handling code here:
        txtTransfer_Amount.setText("");
        txtTransfer_ToAccountNumber.setText("");
}//GEN-LAST:event_btnClear_Withdraw1MouseClicked

    private void btnCancel_Withdraw1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel_Withdraw1MouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CusMenu");
        txtTransfer_Amount.setText("");
        txtTransfer_ToAccountNumber.setText("");
        btnTransfer_ToAccount.setEnabled(true);
}//GEN-LAST:event_btnCancel_Withdraw1MouseClicked

    private void btn11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn11MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "2");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "2");
        }
}//GEN-LAST:event_btn11MouseClicked

    private void btn12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn12MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "3");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "3");
        }
}//GEN-LAST:event_btn12MouseClicked

    private void btn13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn13MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "4");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "4");
        }
}//GEN-LAST:event_btn13MouseClicked

    private void btn14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn14MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "5");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "5");
        }
}//GEN-LAST:event_btn14MouseClicked

    private void btn15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn15MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "6");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "6");
        }
}//GEN-LAST:event_btn15MouseClicked

    private void btn16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn16MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "7");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "7");
        }
}//GEN-LAST:event_btn16MouseClicked

    private void btn17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn17MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "8");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "8");
        }
}//GEN-LAST:event_btn17MouseClicked

    private void btn18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn18MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "9");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "9");
        }
}//GEN-LAST:event_btn18MouseClicked

    private void btnBack1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBack1MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            //txtTransfer_Amount TODO add your handling code here:
            if (txtTransfer_Amount.getText().length() != 0) {
                try {
                    String c = txtTransfer_Amount.getText(0, txtTransfer_Amount.getText().length() - 1);
                    txtTransfer_Amount.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            // TODO add your handling code here:
            if (txtTransfer_ToAccountNumber.getText().length() != 0) {
                try {
                    String c = txtTransfer_ToAccountNumber.getText(0, txtTransfer_ToAccountNumber.getText().length() - 1);
                    txtTransfer_ToAccountNumber.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
}//GEN-LAST:event_btnBack1MouseClicked

    private void btn19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn19MouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_btn19MouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        // TODO add your handling code here:
        txtAccount.setText("");
        txtPIN.setText("");
    }//GEN-LAST:event_btnClearMouseClicked

    private void txtAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAccountMouseClicked
        // TODO add your handling code here:
        txtAccount.setEnabled(true);
        txtPIN.setEnabled(false);
    }//GEN-LAST:event_txtAccountMouseClicked

    private void btnCus_DespositMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_DespositMouseClicked
        try {
            // TODO add your handling code here:
            card.show(pnFarther, "Desposit");
            re = sta.executeQuery("select * from Account where Account_Number=" + Account_Number + "");
            if (re.next()) {
                lblAmount_Deposit_Display.setText(re.getString("Account_Amount"));
            }
            re = sta.executeQuery("SELECT COUNT(Desposit_Amount) FROM Desposit_Money AS thisSes where Account_Number=" + Account_Number + "" + "and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=1");
            if (re.next()) {
                lblDeposit_Session.setText(re.getString(1));
                if (re.getInt(1) >= 5) {
                    btnDesposit_Amount.setEnabled(false);
                    lblError_Deposit.setText("You cann't Desposit because  you sent 5/5!");
                }
            } else {
                lblDeposit_Session.setText("0");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCus_DespositMouseClicked

    private void btnAdm_LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_LoginMouseClicked
        // TODO add your handling code here:
        connec = new connecDB();
        connec.connecDB();
        sta = connec.sta;
        if (txtAccount_Admin.getText().length() < 9) {
            lblError_Admin_Login.setText("Account is not null or Account length can't smaller than 9");
        } else if (txtPIN_Admin.getText().length() < 4) {
            lblError_Admin_Login.setText("PIN is not null or Pin length can't smaller than 4");
        } else {
            try {
                lblError_Admin_Login.setText("");
                re = sta.executeQuery("select * from Account where Account_Number=" + txtAccount_Admin.getText() + " and PIN_Code=" + txtPIN_Admin.getText() + "");
                if (re.next()) {
                    Account_Number = re.getString("Account_Number");
                    String strStatus = re.getString("Account_Status");
                    if (strStatus.equals("DISABLE")) {
                        lblError_Cus_Login.setText("The account is DISABLE");
                    } else {
                        if (re.getString("Account_Level").equals("ADMIN")) {
                            card.show(pnFarther, "AdmMenu");
                            lblError_Admin_Login.setText("");
                            lblAdm_Name.setText(re.getString("Account_Gender") + " . " + re.getString("Account_FullName"));
                            lblAdm_Age.setText(" " + re.getInt("Account_Age"));
                            lblAdm_Age.setText(" " + re.getInt("Account_Phone"));
                            lblAdm_Address.setText(" " + re.getString("Account_Address"));
                        } else {
                            lblError_Admin_Login.setText("This account is not ADMIN");
                        }
                    }
                } else {
                    lblError_Cus_Login.setText("The Account isn't exit or PIN isn't true");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAdm_LoginMouseClicked

    private void txtNewAccountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewAccountMouseExited
        // TODO add your handling code here:
        if (txtNewAccount.getText().length() != 9) {
            lblErrorNewAccount.setForeground(Color.red);
            lblErrorNewAccount.setText("Invalid!");
        } else {
            lblErrorNewAccount.setText("");
        }
}//GEN-LAST:event_txtNewAccountMouseExited

    private void txtNewAmountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewAmountMouseExited
        // TODO add your handling code here:
}//GEN-LAST:event_txtNewAmountMouseExited

    private void btnMaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMaleMouseClicked
        // TODO add your handling code here:
        btnMale.setEnabled(false);
        btnFemale.setEnabled(true);
}//GEN-LAST:event_btnMaleMouseClicked

    private void btnFemaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFemaleMouseClicked
        // TODO add your handling code here:
        btnMale.setEnabled(true);
        btnFemale.setEnabled(false);
}//GEN-LAST:event_btnFemaleMouseClicked

    private void btnNewCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCreateAccountActionPerformed
        // TODO add your handling code here:
        int pass = 0;
        do {
            pass = (int) ((Math.random()) * 10000);
        } while (pass > 9999 || pass < 1000);
        String strNewAccount = txtNewAccount.getText();
        strNewPin = pass;
        String strNewAddress = txtAreaAddress.getText().toUpperCase();
        String strNewAge = txtNewAge.getText();
        String strNewFullName = txtNewFullName.getText().toUpperCase();
        String strNewPhone = txtNewPhone.getText();
        String strNewAmount = txtNewAmount.getText();
        String strLevel = (String) cmbNewLevel.getSelectedItem();
        String strType = (String) cmbNewType.getSelectedItem();
        String strGender;

        if (strNewAccount.equals("") || strNewAmount.equals("") || strNewAge.equals("") || strNewFullName.equals("") || strNewPhone.equals("") || strNewAddress.equals("")) {
            JOptionPane.showMessageDialog(null, "You haven't fill all the field!");
        } else {
            try {
                if (btnMale.isEnabled() == false) {
                    strGender = "MALE";
                } else {
                    strGender = "FEMALE";
                }
                re = sta.executeQuery("select * from Account where Account_Number=" + strNewAccount + "");
                if (re.next()) {
                    lblErrorAccount.setText("Account number is exist !");
                } else {
                    int i = JOptionPane.showConfirmDialog(pnFarther, "Do you want to create account");
                    if (i == 0) {
                        String strSQL = "insert into Account(Account_Number,PIN_Code, Account_Type, Account_Level, Account_Amount,Account_Gender, Account_Age, Account_FullName, Account_Phone,Account_Address)" + " values(" + strNewAccount + "," + strNewPin + ",'" + strType + "','" + strLevel + "'," + strNewAmount + ",'" + strGender + "'," + strNewAge + ",'" + strNewFullName + "'," + strNewPhone + ",'" + strNewAddress + "')";
                        int a = sta.executeUpdate(strSQL);
                        JOptionPane.showMessageDialog(pnFarther, "Create completed !");
                        newAcc = "Account Number : " + strNewAccount + "\n"
                                + "Pin : " + strNewPin + "\n"
                                + "Amount : " + strNewAmount + "\n"
                                + "-------------------------------\n"
                                + "Fullname : " + strNewFullName + "\n"
                                + "Gender : " + strGender + "\n"
                                + "Age : " + strNewAge + "\n"
                                + "Phone : " + strNewPhone + "\n"
                                + "Address : " + strNewAddress + "\n";
                        InformationAccount ia = new InformationAccount(newAcc);
                        ia.setVisible(true);
                        txtNewAccount.setText("");
                        txtAreaAddress.setText("");
                        txtNewFullName.setText("");
                        txtNewPhone.setText("");
                        txtNewAge.setText("");
                        txtNewAmount.setText("");
                    } else {
                        JOptionPane.showMessageDialog(pnFarther, "Create failed !");
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_btnNewCreateAccountActionPerformed

    private void btnNewClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewClearMouseClicked
        // TODO add your handling code here:
        txtNewAccount.setText("");
        txtAreaAddress.setText("");
        txtNewFullName.setText("");
        txtNewPhone.setText("");
        txtNewAge.setText("");
        txtNewAmount.setText("");
}//GEN-LAST:event_btnNewClearMouseClicked

    private void btnNewCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewCancelMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "AdmMenu");
        txtNewAccount.setText("");
        txtAreaAddress.setText("");
        txtNewFullName.setText("");
        txtNewPhone.setText("");
        txtNewAge.setText("");
        txtNewAmount.setText("");
}//GEN-LAST:event_btnNewCancelMouseClicked

    private void btn10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn10MouseClicked
        // TODO add your handling code here:
        if (txtTransfer_Amount.isEnabled() == true) {
            txtTransfer_Amount.setText(txtTransfer_Amount.getText() + "" + "1");
        } else if (txtTransfer_ToAccountNumber.isEnabled() == true) {
            txtTransfer_ToAccountNumber.setText(txtTransfer_ToAccountNumber.getText() + "" + "1");
        }
}//GEN-LAST:event_btn10MouseClicked

    private void btnAdm_ChangePinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdm_ChangePinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdm_ChangePinActionPerformed

    private void btnChangePIN_AdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChangePIN_AdminMouseClicked
        // TODO add your handling code here:
        String oldPass = txtChangePin_Old_Admin.getText();
        String newPass = txtChangePin_New_Admin.getText();
        String confirmNewPass = txtChangePin_NewR_Admin.getText();
        if (oldPass.length() != 4) {
            lblError_AChangePin_Old.setForeground(Color.red);
            lblError_AChangePin_Old.setText("Invalid");
        } else {
            lblError_AChangePin_Old.setText("");
            if (!newPass.equals(confirmNewPass)) {
                JOptionPane.showMessageDialog(pnFarther, "Two new PIN is not valid");
            } else {
                try {
                    String strSQL = "select PIN_Code from Account where Account_Number = " + Account_Number + "";
                    re = sta.executeQuery(strSQL);
                    String strPass = "";
                    if (re.next()) {
                        strPass = re.getString("PIN_Code");
                        System.out.println("" + strPass);
                        if (oldPass.equals(strPass)) {
                            if (oldPass == newPass) {
                                lblError_ChangePin.setText("Old Pin and new Pin can't duplicate");
                            } else {
                                try {
                                    int i = JOptionPane.showConfirmDialog(pnManagement, "Do you want to change PIN");
                                    if (i == 0) {
                                        String sql = "update Account set PIN_Code='" + newPass + "' where Account_Number= " + Account_Number + " ";
                                        int result = sta.executeUpdate(sql);
                                        txtChangePin_NewR_Admin.setText("");
                                        txtChangePin_New_Admin.setText("");
                                        txtChangePin_Old_Admin.setText("");
                                    } else if (i == 1) {
                                        JOptionPane.showMessageDialog(pnManagement, "You choice no");
                                    } else if (i == 2) {
                                        txtChangePin_NewR_Admin.setText("");
                                        txtChangePin_New_Admin.setText("");
                                        txtChangePin_Old_Admin.setText("");
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                lblError_ChangePin.setText("");
                            }
                        } else {
                            lblError_ChangePin.setText("PIN isn't true");
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnChangePIN_AdminMouseClicked

    private void btnClear_ChangePIN_AdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClear_ChangePIN_AdminMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClear_ChangePIN_AdminMouseClicked

    private void btnCancel_ChangePIN_AdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel_ChangePIN_AdminMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "AdmMenu");
    }//GEN-LAST:event_btnCancel_ChangePIN_AdminMouseClicked

    private void btnChangePIN_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChangePIN_UserMouseClicked
        // TODO add your handling code here:
        String oldPass = txtChange_PIN_UOld.getText();
        String newPass = txtChange_PIN_UNew.getText();
        String confirmNewPass = txtChange_PIN_UNewR.getText();
        if (oldPass.length() != 4) {
            lblError_changePin_UOLD.setForeground(Color.red);
            lblError_changePin_UOLD.setText("Invalid");
        } else {
            lblError_changePin_UOLD.setText("");
            if (!newPass.equals(confirmNewPass)) {
                JOptionPane.showMessageDialog(pnFarther, "Two new PIN is not valid");
            } else {
                try {
                    String strSQL = "select PIN_Code from Account where Account_Number = " + Account_Number + "";
                    re = sta.executeQuery(strSQL);
                    String strPass = "";
                    if (re.next()) {
                        strPass = re.getString("PIN_Code");
                        System.out.println("" + strPass);
                        if (oldPass.equals(strPass)) {
                            if (oldPass == newPass) {
                                lblError_ChangePinU.setText("Old Pin and new Pin can't duplicate");
                            } else {

                                try {
                                    int i = JOptionPane.showConfirmDialog(pnManagement, "Do you want to change PIN");
                                    if (i == 0) {
                                        String sql = "update Account set PIN_Code='" + newPass + "' where Account_Number= " + Account_Number + " ";
                                        int result = sta.executeUpdate(sql);
                                        txtChange_PIN_UNew.setText("");
                                        txtChange_PIN_UNewR.setText("");
                                        txtChange_PIN_UOld.setText("");
                                        txtChange_PIN_UNewR.setEnabled(false);
                                    } else if (i == 1) {
                                        JOptionPane.showMessageDialog(pnManagement, "You choice no");
                                    } else if (i == 2) {
                                        txtChange_PIN_UNew.setText("");
                                        txtChange_PIN_UNewR.setText("");
                                        txtChange_PIN_UOld.setText("");
                                    }
                                } catch (SQLException ex) {
                                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                lblError_ChangePinU.setText("");
                            }
                        } else {
                            lblError_ChangePinU.setText("PIN isn't true");
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnChangePIN_UserMouseClicked

    private void btnClear_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClear_UserMouseClicked
        // TODO add your handling code here:
        txtChange_PIN_UOld.setText("");
        txtChange_PIN_UNewR.setText("");
        txtChange_PIN_UNew.setText("");
    }//GEN-LAST:event_btnClear_UserMouseClicked

    private void btnCancel_ChangePIN_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel_ChangePIN_UserMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CusMenu");
    }//GEN-LAST:event_btnCancel_ChangePIN_UserMouseClicked

    private void btn40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn40MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "1");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "1");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "1");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn40MouseClicked

    private void btn41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn41MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "2");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "2");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "2");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn41MouseClicked

    private void btn42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn42MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "3");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "3");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "3");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn42MouseClicked

    private void btn43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn43MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "4");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "4");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "4");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn43MouseClicked

    private void btn44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn44MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "5");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "5");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "5");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn44MouseClicked

    private void btn45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn45MouseClicked
        // TODO add your handling code here: if (txtChange_PIN_UOld.isEnabled() == true) {
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "6");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "6");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "6");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn45MouseClicked

    private void btn46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn46MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "7");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "7");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "7");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn46MouseClicked

    private void btn47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn47MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "8");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "8");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "8");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn47MouseClicked

    private void btn48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn48MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "9");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "9");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "9");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn48MouseClicked

    private void btnBack4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBack4MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            // TODO add your handling code here:
            if (txtChange_PIN_UOld.getText().length() != 0) {
                try {
                    String c = txtChange_PIN_UOld.getText(0, txtChange_PIN_UOld.getText().length() - 1);
                    txtChange_PIN_UOld.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            // TODO add your handling code here:
            if (txtChange_PIN_UNew.getText().length() != 0) {
                try {
                    String c = txtChange_PIN_UNew.getText(0, txtChange_PIN_UNew.getText().length() - 1);
                    txtChange_PIN_UNew.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            if (txtChange_PIN_UNew.getText().length() != 0) {
                try {
                    String c = txtChange_PIN_UNewR.getText(0, txtChange_PIN_UNewR.getText().length() - 1);
                    txtChange_PIN_UNewR.setText(c);
                } catch (BadLocationException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btnBack4MouseClicked

    private void btn49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn49MouseClicked
        // TODO add your handling code here:
        if (txtChange_PIN_UOld.isEnabled() == true) {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "" + "0");
        } else if (txtChange_PIN_UNew.isEnabled() == true) {
            txtChange_PIN_UNew.setText(txtChange_PIN_UNew.getText() + "" + "0");
        } else if (txtChange_PIN_UNewR.isEnabled() == true) {
            txtChange_PIN_UNewR.setText(txtChange_PIN_UNewR.getText() + "0");
        } else {
            txtChange_PIN_UOld.setText(txtChange_PIN_UOld.getText() + "");
        }
    }//GEN-LAST:event_btn49MouseClicked

    private void txtChangePin_Old_AdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChangePin_Old_AdminMouseExited
        // TODO add your handling code here:
        if (txtChangePin_Old_Admin.getText().length() != 4) {
            lblError_AChangePin_Old.setForeground(Color.red);
            lblError_AChangePin_Old.setText("Invalid!");
        } else {
            lblError_AChangePin_Old.setText("");
        }
    }//GEN-LAST:event_txtChangePin_Old_AdminMouseExited

    private void txtChangePin_New_AdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChangePin_New_AdminMouseExited
        // TODO add your handling code here:
        if (txtChangePin_New_Admin.getText().length() != 4) {
            lblError_AChangePin_new.setForeground(Color.red);
            lblError_AChangePin_new.setText("Invalid!");
        } else {
            lblError_AChangePin_new.setText("");
        }
    }//GEN-LAST:event_txtChangePin_New_AdminMouseExited

    private void txtChangePin_NewR_AdminMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChangePin_NewR_AdminMouseExited
        // TODO add your handling code here:
        String strCheck = txtChangePin_New_Admin.getText();
        String strCheck2 = txtChangePin_NewR_Admin.getText();
        if (strCheck.equalsIgnoreCase(strCheck2)) {
            lblError_AChangePin_newR.setText("");
        } else {
            lblError_AChangePin_newR.setForeground(Color.red);
            lblError_AChangePin_newR.setText("Invalid!");
        }
    }//GEN-LAST:event_txtChangePin_NewR_AdminMouseExited

    private void btnCus_DespositMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_DespositMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You can desposit money in the banks");
    }//GEN-LAST:event_btnCus_DespositMouseMoved

    private void btnCus_WithdrawMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_WithdrawMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You can withdraw money \nin the banks");
    }//GEN-LAST:event_btnCus_WithdrawMouseMoved

    private void btnCus_TransferMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_TransferMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You can transfer money \n from your amount to Account number.");
    }//GEN-LAST:event_btnCus_TransferMouseMoved

    private void btnCus_BlanceMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_BlanceMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You can view information for you:\n Fullname, age, address and Amount.");
    }//GEN-LAST:event_btnCus_BlanceMouseMoved

    private void btnCus_ChangePinMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_ChangePinMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You can change PIN code \n for your account number");
    }//GEN-LAST:event_btnCus_ChangePinMouseMoved

    private void btnCus_ExitMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCus_ExitMouseMoved
        // TODO add your handling code here:
        txtaCus_Notes.setText("You will exit System \n if you click this button");
    }//GEN-LAST:event_btnCus_ExitMouseMoved

    private void btnExit_Manager5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExit_Manager5MouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "AdmMenu");
}//GEN-LAST:event_btnExit_Manager5MouseClicked

    private void btnEnableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnableMouseClicked
        // TODO add your handling code here:
        int x = tblListUserStatus.getSelectedRow();
        int Acc = new Integer((String) tblListUserStatus.getValueAt(x, 2));
        int i;
        i = JOptionPane.showConfirmDialog(pnFarther, "Are you want to enable of this " + Acc + " ?");
        if (i == 0) {
            try {
                String strDisable = "Update Account set Account_Status = 'ENABLE' where Account_Number = " + Acc + "";
                sta.executeUpdate(strDisable);
                JOptionPane.showMessageDialog(pnFarther, "You just have enabled!");
                LoadUser();
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (i == 1) {
            JOptionPane.showMessageDialog(pnFarther, "You choice No! thankyou!");
        } else {
            JOptionPane.showMessageDialog(pnFarther, "You choice Cancel !");
        }
    }//GEN-LAST:event_btnEnableMouseClicked

    private void btnDisableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDisableMouseClicked
        // TODO add your handling code here:
        int x = tblListUserStatus.getSelectedRow();
        int Acc = new Integer((String) tblListUserStatus.getValueAt(x, 2));
        int i;
        i = JOptionPane.showConfirmDialog(pnFarther, "Are you want to Disable of this " + Acc + " ?");
        if (i == 0) {
            try {
                String strDisable = "Update Account set Account_Status = 'DISABLE' where Account_Number = " + Acc + "";
                sta.executeUpdate(strDisable);
                JOptionPane.showMessageDialog(pnFarther, "You just have Disabled!");
                LoadUser();
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (i == 1) {
            JOptionPane.showMessageDialog(pnFarther, "You choice No! thankyou!");
        } else {
            JOptionPane.showMessageDialog(pnFarther, "You choice Cancel !");
        }
}//GEN-LAST:event_btnDisableMouseClicked

    private void btnExit_Manager4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExit_Manager4MouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "AdmMenu");
}//GEN-LAST:event_btnExit_Manager4MouseClicked

    private void btnRefreshPINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshPINMouseClicked
        // TODO add your handling code here:
        LoadAccountResetPIN();
}//GEN-LAST:event_btnRefreshPINMouseClicked

    private void btnReset_PINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReset_PINMouseClicked
        // TODO add your handling code here:
        int x = tblReSetPIN.getSelectedRow();
        int Acc = new Integer((String) tblReSetPIN.getValueAt(x, 1));
        int i = JOptionPane.showConfirmDialog(pnFarther, "Are you want to reset pin of this User " + Acc + "?");
        int pass = 0;
        do {
            pass = (int) ((Math.random()) * 10000);
        } while (pass > 9999 || pass < 1000);
        if (i == 0) {
            try {
                String strReset = "Update Account set PIN_Code = " + pass + " where Account_Number = " + Acc + "";
                sta.executeUpdate(strReset);
                JOptionPane.showMessageDialog(pnFarther, "This " + Acc + " have been reseted to: " + pass);
                LoadAccountResetPIN();
            } catch (SQLException ex) {
                Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (i == 1) {
            JOptionPane.showMessageDialog(pnFarther, "You choice No! thankyou!");
        } else {
            JOptionPane.showMessageDialog(pnFarther, "You choice Cancel !");
        }
}//GEN-LAST:event_btnReset_PINMouseClicked

    private void btnExit_Manager1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExit_Manager1MouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "AdmMenu");
}//GEN-LAST:event_btnExit_Manager1MouseClicked

    private void btnDesposit_AcceptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDesposit_AcceptMouseClicked
        // TODO add your handling code here:

        // TODO add your handling code here:
        int x = tbDesposit.getSelectedRow();
        int acc = new Integer((String) tbDesposit.getValueAt(x, 1));
        int ses = new Integer((String) tbDesposit.getValueAt(x, 2));
        int amo = new Integer((String) tbDesposit.getValueAt(x, 3));
        String st = (String) tbDesposit.getValueAt(x, 5);
        if (st.equals("Waiting...")) {
            int i = JOptionPane.showConfirmDialog(pnFarther, "Do you want to accept ?");
            if (i == 0) {
                try {
                    //you choose is 'Yes'
                    sta.executeUpdate("Update Desposit_Money set Desposit_Status='Success' where Desposit_Session=" + ses + "");
                    sta.executeUpdate("Update Account set Account_Amount=(select Account_Amount from Account where Account_Number =" + acc + ")+" + amo + " where Account_Number = " + acc);
                    sta.executeUpdate("Update Bank set Bank_Amount= (select Bank_Amount from Bank) +" + amo + "");
                    Load_Desposit();
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (i == 1) {
                //you choose is 'no'
                JOptionPane.showMessageDialog(pnFarther, "You choice No !");
            } else {
                //you choose is 'cancel'
                JOptionPane.showMessageDialog(pnFarther, "You choice Cancel !");
            }
        }
}//GEN-LAST:event_btnDesposit_AcceptMouseClicked

    private void cmbManagementItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbManagementItemStateChanged
        // TODO add your handling code here:
        if (cmbManagement.getSelectedItem() == "List desposit money") {
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Desposit_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Desposit_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Desposit_Filter("Month");
            } else {
                Load_Desposit();
            }
        } else if (cmbManagement.getSelectedItem() == "List withdraw money") {
            btnDesposit_Accept.setVisible(false);
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Withdraw_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Withdraw_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Withdraw_Filter("Month");
            } else {
                Load_Withdraw();
            }
        } else if (cmbManagement.getSelectedItem() == "List transfer money") {
            btnDesposit_Accept.setVisible(false);
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Transfer_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Transfer_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Transfer_Filter("Month");
            } else {
                Load_Transfer();
            }
        }
    }//GEN-LAST:event_cmbManagementItemStateChanged

    private void tblListUserStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListUserStatusMouseClicked
        try {
            // TODO add your handling code here:
            int r = tblListUserStatus.getSelectedRow();
            String strAcc = tblListUserStatus.getValueAt(r, 2).toString();
            re = sta.executeQuery("select * from Account where Account_Number = " + strAcc);
            if (re.next()) {
                if (re.getString("Account_Status").equals("ENABLE")) {
                    btnEnable.setVisible(false);
                    btnDisable.setVisible(true);
                } else if (re.getString("Account_Status").equals("DISABLE")) {
                    btnEnable.setVisible(true);
                    btnDisable.setVisible(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblListUserStatusMouseClicked

    private void tbDespositMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDespositMouseClicked
        try {
            // TODO add your handling code here:
            if (cmbManagement.getSelectedItem() == "List desposit money") {
                int r = tbDesposit.getSelectedRow();
                String strSes = tbDesposit.getValueAt(r, 2).toString();
                re = sta.executeQuery("select * from Desposit_Money where Desposit_Session=" + strSes);
                if (re.next()) {
                    if (re.getString("Desposit_Status").equals("Waiting...")) {
                        btnDesposit_Accept.setVisible(true);
                    } else if (re.getString("Desposit_Status").equals("Success")) {
                        btnDesposit_Accept.setVisible(false);
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbDespositMouseClicked

    private void cmbFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFilterItemStateChanged
        // TODO add your handling code here:
        if (cmbManagement.getSelectedItem() == "List desposit money") {
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Desposit_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Desposit_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Desposit_Filter("Month");
            } else {
                Load_Desposit();
            }
        } else if (cmbManagement.getSelectedItem() == "List withdraw money") {
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Withdraw_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Withdraw_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Withdraw_Filter("Month");
            } else {
                Load_Withdraw();
            }
        } else if (cmbManagement.getSelectedItem() == "List transfer money") {
            if (cmbFilter.getSelectedItem() == "Today") {
                Load_Transfer_Filter("Day");
            } else if (cmbFilter.getSelectedItem() == "10 days ago") {
                Load_Transfer_Filter("10days");
            } else if (cmbFilter.getSelectedItem() == "Last month") {
                Load_Transfer_Filter("Month");
            } else {
                Load_Transfer();
            }
        }
    }//GEN-LAST:event_cmbFilterItemStateChanged

    private void txtPINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPINMouseClicked
        // TODO add your handling code here:
        txtAccount.setEnabled(false);
        txtPIN.setEnabled(true);
    }//GEN-LAST:event_txtPINMouseClicked

    private void cmb_History_UserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_History_UserItemStateChanged
        if (cmb_History_User.getSelectedItem() == "Desposit money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_Desposit_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_Desposit_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_Desposit_Filter("Month");
            } else {
                LoadBalance_Type_Desposit_One();
            }
        } else if (cmb_History_User.getSelectedItem() == "Transfer money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_Transfer_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_Transfer_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_Transfer_Filter("Month");
            } else {
                LoadBalance_Type_Transfer_One();
            }
        } else if (cmb_History_User.getSelectedItem() == "Withdraw money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_WithDraw_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_WithDraw_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_WithDraw_Filter("Month");
            } else {
                LoadBalance_Type_WithDraw_One();
            }
        }
}//GEN-LAST:event_cmb_History_UserItemStateChanged

    private void btnCancel_Blance_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel_Blance_UserMouseClicked
        // TODO add your handling code here:
        card.show(pnFarther, "CusMenu");
        cmb_History_User.removeAllItems();
}//GEN-LAST:event_btnCancel_Blance_UserMouseClicked

    private void txtChange_PIN_UOldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChange_PIN_UOldMouseClicked
        // TODO add your handling code here:
        txtChange_PIN_UOld.setEnabled(true);
        txtChange_PIN_UNew.setEnabled(false);
        txtChange_PIN_UNewR.setEnabled(false);
    }//GEN-LAST:event_txtChange_PIN_UOldMouseClicked

    private void txtChange_PIN_UNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChange_PIN_UNewMouseClicked
        // TODO add your handling code here:
        txtChange_PIN_UOld.setEnabled(false);
        txtChange_PIN_UNew.setEnabled(true);
        txtChange_PIN_UNewR.setEnabled(false);
    }//GEN-LAST:event_txtChange_PIN_UNewMouseClicked

    private void txtChange_PIN_UNewRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtChange_PIN_UNewRMouseClicked
        // TODO add your handling code here:
        txtChange_PIN_UOld.setEnabled(false);
        txtChange_PIN_UNew.setEnabled(false);
        txtChange_PIN_UNewR.setEnabled(true);
    }//GEN-LAST:event_txtChange_PIN_UNewRMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAdm_CreateMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_CreateMouseMoved
        // TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrator can create \n new Account number for \n custormer or administrator");
    }//GEN-LAST:event_btnAdm_CreateMouseMoved

    private void btnAdm_ManagementMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_ManagementMouseMoved
        // TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrator can management \n transaction  history, reset pin\n view list customer.");
    }//GEN-LAST:event_btnAdm_ManagementMouseMoved

    private void btnAdm_BankMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_BankMouseMoved
        // TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrator can view amount \n in the bank");
    }//GEN-LAST:event_btnAdm_BankMouseMoved

    private void btnAdm_ChangePinMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdm_ChangePinMouseMoved
        // TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrator can change password.");
    }//GEN-LAST:event_btnAdm_ChangePinMouseMoved

    private void btnAd_ExitMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAd_ExitMouseDragged
        // TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrater 'll exit if button click \n is clicked");
    }//GEN-LAST:event_btnAd_ExitMouseDragged

    private void btnAd_ExitMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAd_ExitMouseMoved
// TODO add your handling code here:
        txtaAdm_Notes.setForeground(Color.red);
        txtaAdm_Notes.setText("Administrater 'll exit if button click \n is clicked");
    }//GEN-LAST:event_btnAd_ExitMouseMoved

    private void cmbFilter_UserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFilter_UserItemStateChanged
        // TODO add your handling code here:
        if (cmb_History_User.getSelectedItem() == "Desposit money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_Desposit_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_Desposit_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_Desposit_Filter("Month");
            } else {
                LoadBalance_Type_Desposit_One();
            }
        } else if (cmb_History_User.getSelectedItem() == "Transfer money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_Transfer_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_Transfer_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_Transfer_Filter("Month");
            } else {
                LoadBalance_Type_Transfer_One();
            }
        } else if (cmb_History_User.getSelectedItem() == "Withdraw money") {
            if (cmbFilter_User.getSelectedItem() == "Today") {
                LoadBalance_Type_WithDraw_Filter("Day");
            } else if (cmbFilter_User.getSelectedItem() == "10 days ago") {
                LoadBalance_Type_WithDraw_Filter("10days");
            } else if (cmbFilter_User.getSelectedItem() == "Last month") {
                LoadBalance_Type_WithDraw_Filter("Month");
            } else {
                LoadBalance_Type_WithDraw_One();
            }
        }
    }//GEN-LAST:event_cmbFilter_UserItemStateChanged
    Display di;
    public void Load_Desposit_Filter(String fil) {
        try {
            if (fil == "Day") {
                re = sta.executeQuery("select * from Desposit_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=1");
            } else if (fil == "10days") {
                re = sta.executeQuery("select * from Desposit_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=10");
            } else if (fil == "Month") {
                re = sta.executeQuery("select * from Desposit_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vContent = new Vector();
            Vector vTitle = new Vector();
            vTitle.add("Num");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("Status");
            vTitle.add("Action");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Desposit_Session"));
                temp.add(jrsi.getString("Desposit_Amount"));
                temp.add(jrsi.getString("Desposit_Time"));
                temp.add(jrsi.getString("Desposit_Status"));
                if (jrsi.getString("Desposit_Status").equals("Waiting...")) {
                    temp.add("Accept");
                } else {
                    temp.add("None");
                }
                vContent.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.setDataVector(vContent, vTitle);
            tbDesposit.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Load_Desposit() {
        try {
            re = sta.executeQuery("select * from Desposit_Money order by Desposit_Time DESC");
            jrsi = new JdbcRowSetImpl(re);
            Vector vContent = new Vector();
            Vector vTitle = new Vector();
            vTitle.add("Num");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("Status");
            vTitle.add("Action");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Desposit_Session"));
                temp.add(jrsi.getString("Desposit_Amount"));
                temp.add(jrsi.getString("Desposit_Time"));
                temp.add(jrsi.getString("Desposit_Status"));
                if (jrsi.getString("Desposit_Status").equals("Waiting...")) {
                    temp.add("Accept");
                } else {
                    temp.add("None");
                }
                vContent.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.setDataVector(vContent, vTitle);
            tbDesposit.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Load_Withdraw() {
        try {
            re = sta.executeQuery("select * from Withdraw_Money order by Withdraw_Time");
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Number");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("Status");
            vTitle.add("Action");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Withdraw_Session"));
                temp.add(jrsi.getString("Withdraw_Amount"));
                temp.add(jrsi.getString("Withdraw_Time"));
                temp.add(jrsi.getString("Withdraw_Status"));
                if (jrsi.getString("Withdraw_Status").equals("Waiting...")) {
                    temp.add("Accept");
                } else {
                    temp.add("None");
                }
                vContent.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.setDataVector(vContent, vTitle);
            tbDesposit.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void Load_Withdraw_Filter(String fil) {
        try {
            if (fil == "Day") {
                re = sta.executeQuery("select * from Withdraw_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=1");
            } else if (fil == "10days") {
                re = sta.executeQuery("select * from Withdraw_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=10");
            } else if (fil == "Month") {
                re = sta.executeQuery("select * from Withdraw_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Number");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("Status");
            vTitle.add("Action");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Withdraw_Session"));
                temp.add(jrsi.getString("Withdraw_Amount"));
                temp.add(jrsi.getString("Withdraw_Time"));
                temp.add(jrsi.getString("Withdraw_Status"));
                if (jrsi.getString("Withdraw_Status").equals("Waiting...")) {
                    temp.add("Accept");
                } else {
                    temp.add("None");
                }
                vContent.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.setDataVector(vContent, vTitle);
            tbDesposit.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void LoadAccountResetPIN() {
        try {
            re = sta.executeQuery("select * from Account");
            jrsi = new JdbcRowSetImpl(re);
            Vector vTiTle = new Vector();
            Vector vContent = new Vector();
            vTiTle.add("Number");
            vTiTle.add("Account Number");
            vTiTle.add("Status");
            vTiTle.add("Level");
            vTiTle.add("Type");
            vTiTle.add("Full name");
            vTiTle.add("Gender");
            vTiTle.add("Phone");
            vTiTle.add("Address");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Account_Status"));
                temp.add(jrsi.getString("Account_Level"));
                temp.add(jrsi.getString("Account_Type"));
                temp.add(jrsi.getString("Account_FullName"));
                temp.add(jrsi.getString("Account_Gender"));
                temp.add(jrsi.getString("Account_Phone"));
                temp.add(jrsi.getString("Account_Address"));
                vContent.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel();
            model.setDataVector(vContent, vTiTle);
            tblReSetPIN.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Load_Transfer_Filter(String fil) {
        try {
            if (fil == "Day") {
                re = sta.executeQuery("select * from Transfer_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=1");
            } else if (fil == "10days") {
                re = sta.executeQuery("select * from Transfer_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=10");
            } else if (fil == "Month") {
                re = sta.executeQuery("select * from Transfer_Money where ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Number");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("To_Account");
            vTitle.add("Status");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Transfer_Session"));
                temp.add(jrsi.getString("Transfer_Amount"));
                temp.add(jrsi.getString("Transfer_Time"));
                temp.add(jrsi.getString("Transfer_To_Account"));
                temp.add(jrsi.getString("Transfer_Status"));
                vContent.add(temp);
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tbDesposit.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void Load_Transfer() {
        try {
            re = sta.executeQuery("select * from Transfer_Money");
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Number");
            vTitle.add("Account");
            vTitle.add("Session");
            vTitle.add("Amount");
            vTitle.add("Time");
            vTitle.add("To_Account");
            vTitle.add("Status");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                no++;
                temp.add("" + no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Transfer_Session"));
                temp.add(jrsi.getString("Transfer_Amount"));
                temp.add(jrsi.getString("Transfer_Time"));
                temp.add(jrsi.getString("Transfer_To_Account"));
                temp.add(jrsi.getString("Transfer_Status"));
                vContent.add(temp);
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tbDesposit.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void LoadUser() {
        try {
            re = sta.executeQuery("Select * from Account where Account_Level= 'USER'");
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("Account Number");
            vTitle.add("Status");
            vTitle.add("PIN code");
            vTitle.add("Type");
            vTitle.add("Amount");
            vTitle.add("Full name");
            vTitle.add("Gender");
            vTitle.add("Age");
            vTitle.add("Phone");
            vTitle.add("Address");
            int no = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();

                no++;
                temp.add(no);
                temp.add(jrsi.getString("Account_Number"));
                temp.add(jrsi.getString("Account_Status"));
                temp.add(jrsi.getString("PIN_Code"));
                temp.add(jrsi.getString("Account_Type"));
                temp.add(jrsi.getString("Account_Amount"));
                temp.add(jrsi.getString("Account_FullName"));
                temp.add(jrsi.getString("Account_Gender"));
                temp.add(jrsi.getString("Account_Age"));
                temp.add(jrsi.getString("Account_Phone"));
                temp.add(jrsi.getString("Account_Address"));
                vContent.add(temp);
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblListUserStatus.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadBalance_Type_Transfer_One() {
        try {

            String strSQL = "select * from Transfer_Money where Account_Number = " + Account_Number + "";
            re = sta.executeQuery(strSQL);
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("To Account");
            vTitle.add("Transfer money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                n++;
                temp.add(n);
                temp.add(jrsi.getString("Transfer_To_Account"));
                temp.add(jrsi.getString("Transfer_Amount"));
                temp.add(jrsi.getString("Transfer_Time"));
                vContent.add(temp);
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadBalance_Type_Transfer_Filter(String filTr) {
        try {
            if (filTr == "Day") {
                re = sta.executeQuery("select * from Transfer_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=1");
            } else if (filTr == "10days") {
                re = sta.executeQuery("select * from Transfer_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=10");
            } else if (filTr == "Month") {
                re = sta.executeQuery("select * from Transfer_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Transfer_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("To Account");
            vTitle.add("Session");
            vTitle.add("Transfer money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                Vector temp = new Vector();
                n++;
                temp.add(n);
                temp.add(jrsi.getString("Transfer_To_Account"));
                temp.add(jrsi.getString("Transfer_Session"));
                temp.add(jrsi.getString("Transfer_Amount"));
                temp.add(jrsi.getString("Transfer_Time"));
                vContent.add(temp);
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadBalance_Type_Desposit_Filter(String filDe) {
        try {
            if (filDe == "Day") {
                re = sta.executeQuery("select * from Desposit_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=1");
            } else if (filDe == "10days") {
                re = sta.executeQuery("select * from Desposit_Money where Account_Number = " + Account_Number + " and  ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=10");
            } else if (filDe == "Month") {
                re = sta.executeQuery("select * from Desposit_Money where Account_Number = " + Account_Number + " and  ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Desposit_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("Account Number");
            vTitle.add("Session");
            vTitle.add("Desposit money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                try {
                    Vector temp = new Vector();
                    n++;
                    temp.add(n);
                    temp.add(jrsi.getString("Account_Number"));
                    temp.add(jrsi.getString("Desposit_Session"));
                    temp.add(jrsi.getString("Desposit_Amount"));
                    temp.add(jrsi.getString("Desposit_Time"));
                    vContent.add(temp);
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadBalance_Type_WithDraw_Filter(String filWi) {
        try {
            if (filWi == "Day") {
                re = sta.executeQuery("select * from Withdraw_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=1");
            } else if (filWi == "10days") {
                re = sta.executeQuery("select * from Withdraw_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=10");
            } else if (filWi == "Month") {
                re = sta.executeQuery("select * from Withdraw_Money where Account_Number = " + Account_Number + " and ((select Convert(Smalldatetime,getdate(),105))" + "-(select Convert(Smalldatetime,Withdraw_Time,105)))<=30");
            }
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("Account Number");
            vTitle.add("Session");
            vTitle.add("Withdraw money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                try {
                    Vector temp = new Vector();
                    n++;
                    temp.add(n);
                    temp.add(jrsi.getString("Account_Number"));
                    temp.add(jrsi.getString("Withdraw_Session"));
                    temp.add(jrsi.getString("Withdraw_Amount"));
                    temp.add(jrsi.getString("Withdraw_Time"));
                    vContent.add(temp);
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadBalance_Type_Desposit_One() {
        try {
            String strSQL = "Select * from Desposit_Money where Account_Number = " + Account_Number + "";
            re = sta.executeQuery(strSQL);
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("Account Number");
            vTitle.add("Desposit money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                try {
                    Vector temp = new Vector();
                    n++;
                    temp.add(n);
                    temp.add(jrsi.getString("Account_Number"));
                    temp.add(jrsi.getString("Desposit_Amount"));
                    temp.add(jrsi.getString("Desposit_Time"));
                    vContent.add(temp);
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setCol(int c1, int c2, int c3) {
        pnAdmin_Log.setBackground(new Color(c1, c2, c3));
        pnBlance_User.setBackground(new Color(c1, c2, c3));
        pnChange_PinADMIN.setBackground(new Color(c1, c2, c3));
        pnChange_PinUSER.setBackground(new Color(c1, c2, c3));
        pnCreate_Account.setBackground(new Color(c1, c2, c3));
        pnCustomer_Log.setBackground(new Color(c1, c2, c3));
        pnDeList.setBackground(new Color(c1, c2, c3));
        pnDeList3.setBackground(new Color(c1, c2, c3));
        pnDeList4.setBackground(new Color(c1, c2, c3));
        pnDesposit.setBackground(new Color(c1, c2, c3));
        pnFarther.setBackground(new Color(c1, c2, c3));
        pnK.setBackground(new Color(c1, c2, c3));
        pnK1.setBackground(new Color(c1, c2, c3));
        pnK2.setBackground(new Color(c1, c2, c3));
        pnK3.setBackground(new Color(c1, c2, c3));
        pnK4.setBackground(new Color(c1, c2, c3));
        pnLayout1.setBackground(new Color(c1, c2, c3));
        pnLayout2.setBackground(new Color(c1, c2, c3));
        pnLayout_Desposit.setBackground(new Color(c1, c2, c3));
        pnLogin_container.setBackground(new Color(c1, c2, c3));
        pnLogin_container1.setBackground(new Color(c1, c2, c3));
        pnLogo1.setBackground(new Color(c1, c2, c3));
        pnLogo10.setBackground(new Color(c1, c2, c3));
        pnLogo11.setBackground(new Color(c1, c2, c3));
        pnLogo2.setBackground(new Color(c1, c2, c3));
        pnLogo3.setBackground(new Color(c1, c2, c3));
        pnLogo4.setBackground(new Color(c1, c2, c3));
        pnLogo6.setBackground(new Color(c1, c2, c3));
        pnLogo7.setBackground(new Color(c1, c2, c3));
        pnLogo8.setBackground(new Color(c1, c2, c3));
        pnLogo9.setBackground(new Color(c1, c2, c3));
        pnManagement.setBackground(new Color(c1, c2, c3));
        pnMenu_Adm.setBackground(new Color(c1, c2, c3));
        pnMenu_ChangePIN.setBackground(new Color(c1, c2, c3));
        pnMenu_Cus.setBackground(new Color(c1, c2, c3));
        pnMenu_Cus_Container.setBackground(new Color(c1, c2, c3));
        pnMenu_Cus_Container1.setBackground(new Color(c1, c2, c3));
        pnMenu_Desposit.setBackground(new Color(c1, c2, c3));
        pnMenu_Transfer.setBackground(new Color(c1, c2, c3));
        pnMenu_Withdraw.setBackground(new Color(c1, c2, c3));
        pnTransfer.setBackground(new Color(c1, c2, c3));
        pnWithdraw.setBackground(new Color(c1, c2, c3));
        pn_Menu_Blance.setBackground(new Color(c1, c2, c3));
        pn_Menu_ChangePIN_Admin.setBackground(new Color(c1, c2, c3));
        jPanel1.setBackground(new Color(c1, c2, c3));
        jPanel2.setBackground(new Color(c1, c2, c3));
        jPanel3.setBackground(new Color(c1, c2, c3));
        jPanel4.setBackground(new Color(c1, c2, c3));
        jPanel5.setBackground(new Color(c1, c2, c3));
        jPanel6.setBackground(new Color(c1, c2, c3));
        jPanel7.setBackground(new Color(c1, c2, c3));
        jPanel8.setBackground(new Color(c1, c2, c3));
        jPanel9.setBackground(new Color(c1, c2, c3));
        jPanel10.setBackground(new Color(c1, c2, c3));
        jPanel11.setBackground(new Color(c1, c2, c3));
        jPanel12.setBackground(new Color(c1, c2, c3));
        jPanel13.setBackground(new Color(c1, c2, c3));
        jPanel14.setBackground(new Color(c1, c2, c3));
        jPanel16.setBackground(new Color(c1, c2, c3));
        jPanel17.setBackground(new Color(c1, c2, c3));
        jPanel18.setBackground(new Color(c1, c2, c3));
        jPanel19.setBackground(new Color(c1, c2, c3));
        jPanel20.setBackground(new Color(c1, c2, c3));
        jPanel21.setBackground(new Color(c1, c2, c3));
        jPanel22.setBackground(new Color(c1, c2, c3));
        jPanel23.setBackground(new Color(c1, c2, c3));
        jPanel24.setBackground(new Color(c1, c2, c3));
        jPanel25.setBackground(new Color(c1, c2, c3));
        jPanel26.setBackground(new Color(c1, c2, c3));
        jPanel27.setBackground(new Color(c1, c2, c3));
        jPanel28.setBackground(new Color(c1, c2, c3));
        jPanel29.setBackground(new Color(c1, c2, c3));
        jPanel30.setBackground(new Color(c1, c2, c3));
        jPanel31.setBackground(new Color(c1, c2, c3));
        jPanel32.setBackground(new Color(c1, c2, c3));
        jPanel33.setBackground(new Color(c1, c2, c3));
    }

    public void LoadBalance_Type_WithDraw_One() {
        try {
            String strSQL = "Select * from WithDraw_Money where Account_Number = " + Account_Number + "";
            re = sta.executeQuery(strSQL);
            jrsi = new JdbcRowSetImpl(re);
            Vector vTitle = new Vector();
            Vector vContent = new Vector();
            vTitle.add("Num");
            vTitle.add("Account Number");
            vTitle.add("Session");
            vTitle.add("Withdraw money");
            vTitle.add("Time");
            int n = 0;
            while (jrsi.next()) {
                try {
                    Vector temp = new Vector();
                    n++;
                    temp.add(n);
                    temp.add(jrsi.getString("Account_Number"));
                    temp.add(jrsi.getString("Withdraw_Session"));
                    temp.add(jrsi.getString("Withdraw_Amount"));
                    temp.add(jrsi.getString("Withdraw_Time"));
                    vContent.add(temp);
                } catch (SQLException ex) {
                    Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.setDataVector(vContent, vTitle);
            tblBalance_History.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(ATM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Loading loading = new Loading();
                loading.setVisible(true);
                if (!loading.isVisible()) {
                    new ATM().setVisible(true);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn13;
    private javax.swing.JButton btn14;
    private javax.swing.JButton btn15;
    private javax.swing.JButton btn16;
    private javax.swing.JButton btn17;
    private javax.swing.JButton btn18;
    private javax.swing.JButton btn19;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn20;
    private javax.swing.JButton btn21;
    private javax.swing.JButton btn22;
    private javax.swing.JButton btn23;
    private javax.swing.JButton btn24;
    private javax.swing.JButton btn25;
    private javax.swing.JButton btn26;
    private javax.swing.JButton btn27;
    private javax.swing.JButton btn28;
    private javax.swing.JButton btn29;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn30;
    private javax.swing.JButton btn31;
    private javax.swing.JButton btn32;
    private javax.swing.JButton btn33;
    private javax.swing.JButton btn34;
    private javax.swing.JButton btn35;
    private javax.swing.JButton btn36;
    private javax.swing.JButton btn37;
    private javax.swing.JButton btn38;
    private javax.swing.JButton btn39;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn40;
    private javax.swing.JButton btn41;
    private javax.swing.JButton btn42;
    private javax.swing.JButton btn43;
    private javax.swing.JButton btn44;
    private javax.swing.JButton btn45;
    private javax.swing.JButton btn46;
    private javax.swing.JButton btn47;
    private javax.swing.JButton btn48;
    private javax.swing.JButton btn49;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAd_Exit;
    private javax.swing.JButton btnAdm_Bank;
    private javax.swing.JButton btnAdm_ChangePin;
    private javax.swing.JButton btnAdm_Clear;
    private javax.swing.JButton btnAdm_Create;
    private javax.swing.JButton btnAdm_Exit;
    private javax.swing.JButton btnAdm_Login;
    private javax.swing.JButton btnAdm_Management;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnCancel_Blance_User;
    private javax.swing.JButton btnCancel_ChangePIN_Admin;
    private javax.swing.JButton btnCancel_ChangePIN_User;
    private javax.swing.JButton btnCancel_Withdraw;
    private javax.swing.JButton btnCancel_Withdraw1;
    private javax.swing.JButton btnChangePIN_Admin;
    private javax.swing.JButton btnChangePIN_User;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear_ChangePIN_Admin;
    private javax.swing.JButton btnClear_User;
    private javax.swing.JButton btnClear_Withdraw;
    private javax.swing.JButton btnClear_Withdraw1;
    private javax.swing.JButton btnCus_Blance;
    private javax.swing.JButton btnCus_ChangePin;
    private javax.swing.JButton btnCus_Desposit;
    private javax.swing.JButton btnCus_Exit;
    private javax.swing.JButton btnCus_Transfer;
    private javax.swing.JButton btnCus_Withdraw;
    private javax.swing.JButton btnDesposit_Accept;
    private javax.swing.JButton btnDesposit_Amount;
    private javax.swing.JButton btnDesposit_Cancel;
    private javax.swing.JButton btnDesposit_Clear;
    private javax.swing.JButton btnDisable;
    private javax.swing.JButton btnEnable;
    private javax.swing.JButton btnExit_Manager1;
    private javax.swing.JButton btnExit_Manager4;
    private javax.swing.JButton btnExit_Manager5;
    private javax.swing.JButton btnFemale;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnMale;
    private javax.swing.JButton btnNewCancel;
    private javax.swing.JButton btnNewClear;
    private javax.swing.JButton btnNewCreateAccount;
    private javax.swing.JButton btnRefreshPIN;
    private javax.swing.JButton btnReset_PIN;
    private javax.swing.JButton btnTransfer_ToAccount;
    private javax.swing.JButton btnWithdrawn_Amount;
    private javax.swing.JComboBox cmbFilter;
    private javax.swing.JComboBox cmbFilter_User;
    private javax.swing.JComboBox cmbManagement;
    private javax.swing.JComboBox cmbNewLevel;
    private javax.swing.JComboBox cmbNewType;
    private javax.swing.JComboBox cmb_History_User;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lblAdm_Address;
    private javax.swing.JLabel lblAdm_Age;
    private javax.swing.JLabel lblAdm_Name;
    private javax.swing.JLabel lblAdm_Phone;
    private javax.swing.JLabel lblAlert;
    private javax.swing.JLabel lblAmount_Deposit_Display;
    private javax.swing.JLabel lblAmount_Transfer_Display;
    private javax.swing.JLabel lblAmount_Transfer_Display2;
    private javax.swing.JLabel lblAmount_Withdraw_Display;
    private javax.swing.JLabel lblBlance_Address;
    private javax.swing.JLabel lblBlance_Address1;
    private javax.swing.JLabel lblBlance_Address2;
    private javax.swing.JLabel lblBlance_Blance;
    private javax.swing.JLabel lblBlance_Transaction1;
    private javax.swing.JLabel lblCus_Address;
    private javax.swing.JLabel lblCus_Age;
    private javax.swing.JLabel lblCus_Name;
    private javax.swing.JLabel lblCus_Phone;
    private javax.swing.JLabel lblDeposit_Session;
    private javax.swing.JLabel lblErrorAccount;
    private javax.swing.JLabel lblErrorNewAccount;
    private javax.swing.JLabel lblErrorNewAge;
    private javax.swing.JLabel lblErrorNewAmount;
    private javax.swing.JLabel lblErrorNewFullName;
    private javax.swing.JLabel lblErrorNewGender;
    private javax.swing.JLabel lblErrorNewPhone;
    private javax.swing.JLabel lblError_AChangePin_Old;
    private javax.swing.JLabel lblError_AChangePin_new;
    private javax.swing.JLabel lblError_AChangePin_newR;
    private javax.swing.JLabel lblError_Admin_Login;
    private javax.swing.JLabel lblError_ChangePin;
    private javax.swing.JLabel lblError_ChangePin1;
    private javax.swing.JLabel lblError_ChangePinU;
    private javax.swing.JLabel lblError_Cus_Login;
    private javax.swing.JLabel lblError_Deposit;
    private javax.swing.JLabel lblError_Transfer;
    private javax.swing.JLabel lblError_Transfer_Amount;
    private javax.swing.JLabel lblError_Transfer_To;
    private javax.swing.JLabel lblError_Withdraw;
    private javax.swing.JLabel lblError_changePin_UNew;
    private javax.swing.JLabel lblError_changePin_UNewR;
    private javax.swing.JLabel lblError_changePin_UOLD;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTime1;
    private javax.swing.JLabel lblTime10;
    private javax.swing.JLabel lblTime11;
    private javax.swing.JLabel lblTime12;
    private javax.swing.JLabel lblTime13;
    private javax.swing.JLabel lblTime2;
    private javax.swing.JLabel lblTime3;
    private javax.swing.JLabel lblTime4;
    private javax.swing.JLabel lblTime5;
    private javax.swing.JLabel lblTime6;
    private javax.swing.JLabel lblTime7;
    private javax.swing.JLabel lblTime8;
    private javax.swing.JLabel lblTime9;
    private javax.swing.JLabel lblTransfer_Session;
    private javax.swing.JLabel lblTransfer_Session2;
    private javax.swing.JLabel lblWithdraw_Session;
    private javax.swing.JLabel lbl_Blance_Gender;
    private javax.swing.JPanel pnAdmin_Log;
    private javax.swing.JPanel pnBlance_User;
    private javax.swing.JPanel pnChange_PinADMIN;
    private javax.swing.JPanel pnChange_PinUSER;
    private javax.swing.JPanel pnCreate_Account;
    private javax.swing.JPanel pnCustomer_Log;
    private javax.swing.JPanel pnDeList;
    private javax.swing.JPanel pnDeList3;
    private javax.swing.JPanel pnDeList4;
    private javax.swing.JPanel pnDesposit;
    private javax.swing.JPanel pnFarther;
    private javax.swing.JPanel pnK;
    private javax.swing.JPanel pnK1;
    private javax.swing.JPanel pnK2;
    private javax.swing.JPanel pnK3;
    private javax.swing.JPanel pnK4;
    private javax.swing.JPanel pnLayout1;
    private javax.swing.JPanel pnLayout2;
    private javax.swing.JPanel pnLayout_Desposit;
    private javax.swing.JPanel pnLogin_container;
    private javax.swing.JPanel pnLogin_container1;
    private javax.swing.JPanel pnLogo1;
    private javax.swing.JPanel pnLogo10;
    private javax.swing.JPanel pnLogo11;
    private javax.swing.JPanel pnLogo2;
    private javax.swing.JPanel pnLogo3;
    private javax.swing.JPanel pnLogo4;
    private javax.swing.JPanel pnLogo6;
    private javax.swing.JPanel pnLogo7;
    private javax.swing.JPanel pnLogo8;
    private javax.swing.JPanel pnLogo9;
    private javax.swing.JPanel pnManagement;
    private javax.swing.JPanel pnMenu_Adm;
    private javax.swing.JPanel pnMenu_ChangePIN;
    private javax.swing.JPanel pnMenu_Cus;
    private javax.swing.JPanel pnMenu_Cus_Container;
    private javax.swing.JPanel pnMenu_Cus_Container1;
    private javax.swing.JPanel pnMenu_Desposit;
    private javax.swing.JPanel pnMenu_Transfer;
    private javax.swing.JPanel pnMenu_Withdraw;
    private javax.swing.JPanel pnTransfer;
    private javax.swing.JPanel pnWithdraw;
    private javax.swing.JPanel pn_Menu_Blance;
    private javax.swing.JPanel pn_Menu_ChangePIN_Admin;
    private javax.swing.JPanel tabDeposit;
    private javax.swing.JPanel tabListUser;
    private javax.swing.JPanel tabResetPIN;
    private javax.swing.JTable tbDesposit;
    private javax.swing.JTable tblBalance_History;
    private javax.swing.JTable tblListUserStatus;
    private javax.swing.JTable tblReSetPIN;
    private javax.swing.JTabbedPane tbnLogin;
    private javax.swing.JTextField txtAccount;
    private javax.swing.JTextField txtAccount_Admin;
    private javax.swing.JTextField txtAreaAddress;
    private javax.swing.JPasswordField txtChangePin_NewR_Admin;
    private javax.swing.JPasswordField txtChangePin_New_Admin;
    private javax.swing.JPasswordField txtChangePin_Old_Admin;
    private javax.swing.JPasswordField txtChange_PIN_UNew;
    private javax.swing.JPasswordField txtChange_PIN_UNewR;
    private javax.swing.JPasswordField txtChange_PIN_UOld;
    private javax.swing.JTextField txtDeposit_Amount;
    private javax.swing.JTextField txtNewAccount;
    private javax.swing.JTextField txtNewAge;
    private javax.swing.JTextField txtNewAmount;
    private javax.swing.JTextField txtNewFullName;
    private javax.swing.JTextField txtNewPhone;
    private javax.swing.JPasswordField txtPIN;
    private javax.swing.JPasswordField txtPIN_Admin;
    private javax.swing.JTextField txtTransfer_Amount;
    private javax.swing.JTextField txtTransfer_ToAccountNumber;
    private javax.swing.JTextField txtWithdraw_Amount;
    private javax.swing.JTextArea txtaAdm_Notes;
    private javax.swing.JTextArea txtaCus_Notes;
    // End of variables declaration//GEN-END:variables
    Connection con;
    ResultSet re;
    Statement sta;
    CardLayout card;
    JdbcRowSetImpl jrsi;
    int strNewPin;
    String newAcc;
}
